name: Publish Helm Chart to Harbor

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'hotfix/**'

env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  publish-to-harbor:
    runs-on: [ self-hosted, devtst-ce ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'


      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.0

      - name: Cache Helm dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            charts/**/charts
            charts/**/tmpcharts
            charts/**/Chart.lock
          key: ${{ runner.os }}-helm-${{ hashFiles('charts/**/Chart.lock') }}
          restore-keys: |
            ${{ runner.os }}-helm-

      - name: List Helm Dependencies
        run: |
          for dir in charts/*; do
            echo "Listing dependencies for $dir"
            helm dep list "$dir"
            echo ""
          done

      - name: Dependency build
        run: |
          for dir in charts/*; do
            if  helm dep list "$dir" | grep -q 'missing';
            then
            
              echo "---"
              echo "Updating de
              pendencies for $dir"
              helm dep update "$dir"
            else
              echo "---"
              echo "Dependencies are up to date for $dir"
            fi
          done

      - name: Package Helm chart
        run: |
          for dir in charts/*; do
            helm package "$dir"
          done

      - name: Log in to Harbor staging
        run: |
          echo ${{ secrets.HARBORSTG_PASSWORD }} | \
          helm registry login harbor.toolsstg.acerta.io -u ${{ secrets.HARBORSTG_USERNAME }} --password-stdin

      - name: Push Helm charts to Harbor staging
        run: |
          for chart in *.tgz; do
            helm push "$chart" oci://harbor.toolsstg.acerta.io/acerta-snapshots
          done

      - name: Pull Helm chart to set Harbor pull counter to non-zero value
        run: |
          for chart in *.tgz; do
            echo $chart
            chart=$(echo $chart | sed 's/.tgz$//')
            chart_version=$(echo $chart | sed -n 's/.*-\([^-]*\)\.tgz$/\1/p')
            chart_name=$(echo $chart | sed -r 's/(.*)-[^-]+$/\1/')

            echo $chart_name $chart_version
            helm pull oci://harbor.toolsstg.acerta.io/acerta-snapshots/$chart_name --version $chart_version
          done

      - name: Log in to Harbor production
        run: |
          echo ${{ secrets.HARBOR_RELEASE_PASSWORD }} | \
          helm registry login harbor.tools.acerta.io -u ${{ secrets.HARBOR_RELEASE_USER }} --password-stdin

      - name: Push Helm charts to Harbor production
        run: |
          for chart in *.tgz; do
            helm push "$chart" oci://harbor.tools.acerta.io/acerta-releases
          done
