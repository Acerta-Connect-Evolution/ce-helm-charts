mssql-latest:
  fullnameOverride: mssql-latest
  enabled: false
  resources:
    limits:
      memory: 3072Mi
    requests:
      cpu: 5m
      memory: 1536Mi
  persistence:
    dataSize: 1Gi
    userlogSeparateClaim: false
    tempSeparateClaim: false
    userdbSeparateClaim: false

elasticsearch:
  fullnameOverride: elasticsearch-master
  enabled: false
  resources:
    limits:
      memory: 3072Mi
    requests:
      cpu: 20m
      memory: 1536Mi
  image: harbor.tools.acerta.io/acerta-releases/acerta-connect-evolution/elasticsearch
  imageTag: 7.15.0
  replicas: 2
  minimumMasterNodes: 1
  volumeClaimTemplate.resources.requests.storage: 1Gi
  sysctlInitContainer.enabled: false
  extraEnvs:
    - name: TZ
      value: Europe/Brussels
  ingress:
    className: ""
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"

redis:
  fullnameOverride: redis
  enabled: false
  resources:
    requests:
      cpu: 5m
      memory: 1024Mi
    limits:
      memory: 128Mi
  architecture: standalone
  global:
    redis:
      password: Admin123

pulsar-standalone:
  fullnameOverride: pulsar-standalone
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 3072Mi
    limits:
      memory: 4096Mi
  ingress:
    className: ""
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"
  persistence:
    enabled: true
    dataSize: 5Gi
    dataAccessMode: ReadWriteOnce
  podSecurityContext:
    runAsUser: 0
    fsGroupChangePolicy: "OnRootMismatch"
  securityContext:
    runAsUser: 0

pulsar-admin-console:
  fullnameOverride: pulsar-admin-console
  enabled: false
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi
  local_json: |
    {
        "auth_mode": "none",
        "cluster_name": "standalone",
        "tenant": "public",
        "oauth_client_id": "",
        "server_config": {
            "port": "6454",
            "pulsar_url": "http://pulsar-standalone:8080",
            "websocket_url": "https://websocket.example.com:8500",
            "function_worker_url": "",
            "log_level": "info",
            "token_path": "",
            "admin_token": "",
            "token_secret": "",
            "ssl": {
                "verify_certs": true,
                "hostname_validation": true,
                "ca_path": "",
                "cert_path": "",
                "key_path": ""
            },
            "kubernetes": {
                "k8s_namespace": "pulsar",
                "kubernetes_service_host": "",
                "service_port": ""
            },
            "user_auth": {
                "username": "",
                "password": ""
            },
            "oauth2": {
                "identity_provider_url": "",
                "token_endpoint": "",
                "grant_type": "password"
            }
        },
        "polling_interval": "10000",
        "ca_certificate": "",
        "api_version": "2.8.3",
        "notice_text": "",
        "functions_disabled": "false",
        "render_monitoring_tab": "false",
        "grafana_url": "",
        "clients_disabled": "false",
        "host_overrides": {
            "pulsar": "http://localhost:6650",
            "ws": "ws://localhost:8080",
            "http": "http://localhost:8964"
        }
    }
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

axon-server-calendar:
  fullnameOverride: axon-server-calendar
  enabled: false
  resources:
    limits:
      memory: 2048Mi
    requests:
      cpu: 10m
      memory: 1024Mi
  image:
    # Note: the name of the repository is used throughout the chart to figure if we should configure for SE or EE
    # "axoniq/axonserver" is the SE Docker image. Any other (custom) image means that the chart will configure for EE
    repository: axoniq/axonserver
    pullPolicy: IfNotPresent
    tag: "4.6.11-dev"
  extraEnvs:
    - name: AXONIQ_AXONSERVER_DEVMODE_ENABLED
      value: "true"
    - name: AXONIQ_AXONSERVER_METRICS_GRPC_ENABLED
      value: "true"
    - name: AXONIQ_AXONSERVER_METRICS_GRPC_PROMETHEUSENABLED
      value: "true"
    - name: AXONIQ_AXONSERVER_KEEP-ALIVE-TIME
      value: "0"
    - name: AXONIQ_AXONSERVER_KEEP-ALIVE-TIMEOUT
      value: "604800000"
    - name: AXONIQ_AXONSERVER_MIN-KEEP-ALIVE-TIME
      value: "604800000"
  persistence:
    enabled: false
    accessModes: [ ReadWriteOnce ]
    size: 3Gi
  java:
    jvmOptions:
      timezoneOptions: "-Duser.timezone=Europe/Brussels"
  ingress:
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"

pulsar-client:
  fullnameOverride: pulsar-client
  enabled: false
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 5m
      memory: 512Mi
  env:
    pulsar:
      adminurl: http://pulsar-standalone:8080
      allowedclusters: standalone
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

pulsar-init-job:
  fullnameOverride: pulsar-init-job
  enabled: false
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: pulsar-standalone:8080/admin/v2/brokers/health;pulsar-client:8080/actuator/health
  script: |
    echo "Create Tenant [connect-evolution]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [connect-evolution/calendar-acl-sync]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-sync' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Namespace [connect-evolution/calendar-acl-sync]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-cdc' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Namespace [connect-evolution/calendar]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [everesst]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [everesst/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [acerta]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [acerta/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Set retention for [connect-evolution/calendar-acl-cdc] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-cdc/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [connect-evolution/calendar-acl-sync] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-sync/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [connect-evolution/calendar] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [acerta/payroll] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/acerta/namespaces/payroll/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [everesst/payroll] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/everesst/namespaces/payroll/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Create Source [connect-evolution/calendar-acl-cdc/dicco-debezium-source]"
    sleep 30
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-cdc/sources' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "name":"dicco-debezium-source",
           "parallelism": 1,
           "config":{
              "database.hostname":"t-sqldicco.global.dns",
              "database.port":"1433",
              "database.user":"connect_evolution_user",
              "database.password":"smethmBM354GEmnsrge",
              "database.dbname":"DICCO",
              "database.server.name":"cdc",
              "table.include.list":"ACERTA.GBTEMC01,ACERTA.GBTEMC02,ACERTA.GBTEMC06,ACERTA.GBTEMC03,ACERTA.GBTPAA30,ACERTA.GBTPAA31,ACERTA.GBTPAA32,ACERTA.GBTPAA01,ACERTA.GBTPAA02,ACERTA.GBTPAA10,ACERTA.GBTPAA12,ACERTA.GBTPAA51,ACERTA.GBTOAA01,ACERTA.GBTOAA03,ACERTA.GBTEMR01,ACERTA.GBTEMR02,ACERTA.GBTEMR20,ACERTA.GBTEMR23,ACERTA.GBTACD01,ACERTA.GBTSSR02",
              "snapshot.mode":"schema_only",
              "snapshot.isolation.mode":"read_committed",
              "topic.namespace":"connect-evolution/calendar-acl-cdc",
              "task.class":"io.debezium.connector.sqlserver.SqlServerConnectorTask",
              "value.converter":"org.apache.kafka.connect.json.JsonConverter",
              "key.converter":"org.apache.kafka.connect.json.JsonConverter",
              "database.history":"org.apache.pulsar.io.debezium.PulsarDatabaseHistory",
              "database.tcpKeepAlive":"true",
              "decimal.handling.mode":"double",
              "database.history.pulsar.topic":"dicco-debezium-source-history-topic",
              "database.history.pulsar.service.url":"pulsar://pulsar-standalone:6650",
              "pulsar.service.url":"pulsar://pulsar-standalone:6650",
              "source.table.include.list":".*\\..*",
              "time.precision.mode":"connect",
              "transforms":"RegisteredConverter,ModifiedConverter",
              "transforms.RegisteredConverter.type":"org.apache.kafka.connect.transforms.TimestampConverter",
              "transforms.RegisteredConverter.format":"yyyy-MM-dd HH-mm-ss.SSSSSS",
              "transforms.RegisteredConverter.field":"REG_TS",
              "transforms.RegisteredConverter.target.type":"Timestamp",
              "transforms.ModifiedConverter.type":"org.apache.kafka.connect.transforms.TimestampConverter",
              "transforms.ModifiedConverterModifiedConverter.format":"yyyy-MM-dd HH-mm-ss.SSSSSS",
              "transforms.ModifiedConverter.field":"MUT_TS",
              "transforms.ModifiedConverter.target.type":"Timestamp"
           }
        }'
    echo ""
    echo "Source Created"

ff4j-init-job:
  fullnameOverride: ff4j-init-job
  enabled: false
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: ce-ff4j-server:8080
  script: ""

db-init-job:
  fullnameOverride: db-init-job
  enabled: false
  image:
    repository: harbor.tools.acerta.io/acerta-releases/acerta-connect-evolution/mssql-client
  initContainers:
    waitForMssql:
      enabled: true
      server:
        host: mssql-latest
  script: |
    export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest'
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE DATABASE connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "ALTER DATABASE connectevolution SET RECOVERY SIMPLE"
    export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest -d connectevolution'
    echo "init CALENDAR_AXON"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA calendar_axon"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_axon_user WITH PASSWORD ='CalendarAxonUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_axon_ddl with PASSWORD = 'CalendarAxonDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_axon_user FROM LOGIN calendar_axon_user WITH DEFAULT_SCHEMA = calendar_axon"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_axon_ddl FROM LOGIN calendar_axon_ddl WITH DEFAULT_SCHEMA = calendar_axon"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_axon_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_axon_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_axon TO calendar_axon_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_axon TO calendar_axon_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO calendar_axon_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_axon_user_role', 'calendar_axon_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_axon_ddl_role', 'calendar_axon_ddl'"
    echo "init CALENDAR_REPERTORIUM"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA calendar_repertorium"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_repertorium_user WITH PASSWORD ='CalendarRepertoriumUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_repertorium_ddl with PASSWORD = 'CalendarRepertoriumDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_repertorium_user FROM LOGIN calendar_repertorium_user WITH DEFAULT_SCHEMA = calendar_repertorium"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_repertorium_ddl FROM LOGIN calendar_repertorium_ddl WITH DEFAULT_SCHEMA = calendar_repertorium"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_repertorium_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_repertorium_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_repertorium TO calendar_repertorium_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_repertorium TO calendar_repertorium_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO calendar_repertorium_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_repertorium_user_role', 'calendar_repertorium_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_repertorium_ddl_role', 'calendar_repertorium_ddl'"
    echo "init CLINK"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA clink"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN clink_user WITH PASSWORD ='ClinkUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN clink_ddl with PASSWORD = 'ClinkDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER clink_user FROM LOGIN clink_user WITH DEFAULT_SCHEMA = clink"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER clink_ddl FROM LOGIN clink_ddl WITH DEFAULT_SCHEMA = clink"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE clink_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE clink_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: clink TO clink_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: clink TO clink_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO clink_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'clink_user_role', 'clink_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'clink_ddl_role', 'clink_ddl'"
    echo "init PREFERENCE"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA preference"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN preference_user WITH PASSWORD ='PreferenceUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN preference_ddl with PASSWORD = 'PreferenceDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER preference_user FROM LOGIN preference_user WITH DEFAULT_SCHEMA = preference"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER preference_ddl FROM LOGIN preference_ddl WITH DEFAULT_SCHEMA = preference"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE preference_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE preference_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: preference TO preference_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: preference TO preference_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO preference_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'preference_user_role', 'preference_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'preference_ddl_role', 'preference_ddl'"
    echo "init PAYROLL_VACATION_CERTIFICATE"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA payroll_vacation_certificate"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN payroll_vacationcertificate_user WITH PASSWORD ='PayrollVacationCertificateUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN payroll_vacationcertificate_ddl with PASSWORD = 'PayRollVacationCertificateDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER payroll_vacationcertificate_user FROM LOGIN payroll_vacationcertificate_user WITH DEFAULT_SCHEMA = payroll_vacation_certificate"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER payroll_vacationcertificate_ddl FROM LOGIN payroll_vacationcertificate_ddl WITH DEFAULT_SCHEMA = payroll_vacation_certificate"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE payroll_vacationcertificate_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE payroll_vacationcertificate_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: payroll_vacation_certificate TO payroll_vacationcertificate_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: payroll_vacation_certificate TO payroll_vacationcertificate_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO payroll_vacationcertificate_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'payroll_vacationcertificate_user_role', 'payroll_vacationcertificate_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'payroll_vacationcertificate_ddl_role', 'payroll_vacationcertificate_ddl'"
    echo "init INIT_LOAD_BATCH"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA init_load_batch"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN init_load_batch_ddl with PASSWORD = 'InitLoadBatchDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER init_load_batch_ddl FROM LOGIN init_load_batch_ddl WITH DEFAULT_SCHEMA = init_load_batch"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE init_load_batch_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: init_load_batch TO init_load_batch_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO init_load_batch_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'init_load_batch_ddl_role', 'init_load_batch_ddl'"
    echo "init MONITORING"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN connectevolution_monitor WITH PASSWORD ='CEMonitorPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER connectevolution_monitor FROM LOGIN connectevolution_monitor"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: calendar_axon TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: calendar_repertorium TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: clink TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: preference TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: payroll_vacation_certificate TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: init_load_batch TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT ON SCHEMA :: spring_cloud_dataflow TO connectevolution_monitor_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'connectevolution_monitor_role', 'connectevolution_monitor'"
  sealedsecret:
    datasource:
      username: AgDAvnpD+6Jk3gRHdARgmuUeRyKmq6lkPTU7YNJhfehCgmzwsZOsAnceRSwjzyDZFsVJQjmexNnQylgl6DyX4FlYgudIvkIS8L/U72g0C2QUyrCHYmqgbyjH65c9+yng3iveYnWCj29X+o1zyIN90YVfsINeRmx80gC7NevNfOdS1oF7B1o/drziPetobrj/USd7N+5R3bNk5niwJYf8EVUpcy8fkVZHZQnddO8FiZi/4vQaYZ+KnwOO56tAoxizgQIV9ozcB+WznLbQqx6GH94g4FPJ+KReLRdGiohOIIKjno8NlqY1nCT6ZxP6l3UzNFXiq3t0BzEd0bvmZmTFrtjisaLsL8TPjHqsdNspfDrTYzQIoaZVDXKtwlPm2ua2Sk6Sa7z6cBe2EVKAa9AgQGfXsiCSKt+/Z0wcvkMOi19hV3DeQTbYk7eBHVoupzkhG+v3XqF9uzpZPPNLIP3sbDPCqPUa1StnXN6T8rUCTIaRUCijWXi+Kzh1Q4lImqYxad8ZwlB9xzDvR9LSWiToi7LMJ17CqPd2WlDoKlUkWAQXg2NYr6SwRPbOYMUgx9mah0aOb2np9DFXXv0IvrB9d2yf+4aOIpnwDbub8aHVPX/qc0qhlvHAtKJ1G0nMdlM0IVWmbt3LmWzLktjFwFlynq9W1yVSby7A6Wc1/S2DYjuwklYhDW0MSQHq7nL863/aii105w==
      password: AgCdt5/5f2nDW2Zy1gKZt98Vbk6J1g/6X6goylU9Vs49srHuINbZmAuWZxdpSy4iCgUT3hALTl1k7p4fQHVKKW2n3hUhRw0tN85drj8vSIodYfJ+MadEKlvVuhZjdHPXpCtOIPcz0OIExkGwBnV/oAsZpOxYnp0pbom43wCsmKRSJzhJMIJNrCq9WNKYbP6k62UJzPC+B9JmmWYCgfPRRIGivRD412ZKQTMnUgtarjaETG5nHHcIHaZxNStkLswrCqQDklYHDaRks3w4LqrEfWsTQLJUumMZvTe95uYsm5GGExTXUgjtDcKhnlANfF2xX7c2gJDlfCYnkYb7zFhccQ/gE6p+ORpc8wBQZXPV3jTVt6dkpNO4a8DCZQcDEouUS5V20lUwtnnIarlZ4DgtSsco+IquVUcU70mBny6yBAvZx27Burf/g1YVIMdhGPkt7HCtJ05BrpcytNUa50UDlS8B6wumx8HaORzWZFTcaUhyfnpGRz853X+XlgzHkghBZqTXAhCHTLrvpz1CAwjhNup6CzBAyrQp/GGGxybwzk6glZkXjMoQ6FiVrGKXuaDAkKFWu4Nu8JiC5wc8bY4Mw4c4gsckfre2HvoL67Va6MOqhpw/Xc5QsYxTtf55hwG5GvjKLb0ZYhrpGPOGu6O6Hjv5rYL/bFmLd+8FZoWRmiNK+X4TCAsyMbBV2gFcU5pOQyUMKOV+J9R28g==

scdf-init-job:
  fullnameOverride: scdf-init-job
  enabled: false
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: "http://scdf-client:8080/actuator/health"
  script: |
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "init",
          "containerImage": "acerta-connect-evolution/init-task:0.36.0",
          "metadataJar": "be.acerta.ce.batch:init-task:jar:metadata:0.36.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "reset-dicco",
          "containerImage": "acerta-connect-evolution/reset-dicco-task:1.4.0",
          "metadataJar": "be.acerta.ce.batch:reset-dicco-task:jar:metadata:1.4.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "migrate-employer",
          "containerImage": "acerta-connect-evolution/migrate-employer-task:0.43.0",
          "metadataJar": "be.acerta.ce.batch:migrate-employer-task:jar:metadata:0.43.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "onboard-ce",
          "containerImage": "acerta-connect-evolution/onboard-ce-task:1.14.0",
          "metadataJar": "be.acerta.ce.batch:onboard-ce-task:jar:metadata:1.14.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "notify",
          "containerImage": "acerta-connect-evolution/notify-task:0.20.0",
          "metadataJar": "be.acerta.ce.batch:notify-task:jar:metadata:0.20.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "clean-ce",
          "containerImage": "acerta-connect-evolution/clean-ce-task:0.19.0",
          "metadataJar": "be.acerta.ce.batch:clean-ce-task:jar:metadata:0.19.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "time-code",
          "containerImage": "acerta-connect-evolution/time-code-task:1.2.0",
          "metadataJar": "be.acerta.ce.batch:time-code-task:jar:metadata:1.2.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "migrate-employer",
          "definition": "init && migrate-employer && onboard-ce && notify",
          "description": "Migrate Employer Task"
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "clean-ce",
          "definition": "init && clean-ce",
          "description": "Clean CE Task"
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "time-code",
          "definition": "time-code",
          "description": "Sync Acerta Wide Time Codes Task"
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "reset-environment",
          "definition": "init && clean-ce && reset-dicco && migrate-employer && onboard-ce && notify",
          "description": "Reset Environment Task"
      }'

ce-ff4j-server:
  fullnameOverride: ce-ff4j-server
  enabled: false
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 256Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  loki:
    enabled: true
    tenant: dev
  tempo:
    enabled: true
    tenant: dev

frontend-services-gateway:
  fullnameOverride: frontend-services-gateway
  enabled: false
  resources:
    requests:
      cpu: 5m
      memory: "512Mi"
    limits:
      memory: "512Mi"
  application_yml: |
    logging:
      pattern.level: 'trace_id=%mdc{trace_id} span_id=%mdc{span_id} %5p'
    server.reactive.session.cookie.name: OKTETO_CE_GATEWAY_SESSION
    spring:
      web:
        resources:
          cache.cachecontrol:
            no-cache: true

      profiles:
        active: always-active
    
      redis:
        host: redis-master
        port: 6379
        password: Admin123
    
      security:
        oauth2:
          client:
            provider:
              keycloak:
                issuer-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/auth/realms/acerta
                token-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/auth/realms/acerta/protocol/openid-connect/token
                authorization-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/auth/realms/acerta/protocol/openid-connect/auth
            registration:
              ce-gateway:
                provider: keycloak
                client-id: ce-gateway
                redirect-uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/login/oauth2/code/ce-gateway
                scope:
                  - openid
                  - email
                  - profile
                  - roles
    
      cloud:
        gateway:
          default-filters:
            - TokenRelay
            - RemoveRequestHeader=Cookie
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
          globalcors:
            corsConfigurations:
              '[/**]':
                allowedMethods: "*"
                allowedHeaders: "*"
                allowedOrigins: "*"
          routes:
            - id: keep-alive
              uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io
              order: 20
              predicates:
                - Path=/keep-alive/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/keep-alive/(?<segment>.*), /static/keep-alive/$\{segment}
            - id: initialize
              uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io
              order: 20
              predicates:
                - Path=/initialize/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/initialize/(?<segment>.*), /static/initialize/$\{segment}
            - id: session-refresh
              uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io
              order: 1000
              predicates:
                - Path=/session-refresh
              filters:
                - RemoveRequestHeader=Cookie
            - id: calendar-timespend-frontend-rsocket
              uri: ws://calendar-timespend-frontend:7000
              order: 10
              predicates:
                - Path=/calendar-timespend/socket
              filters:
                - RewritePath=/calendar-timespend/socket, /socket
            - id: calendar-timespend-frontend-rsocket-perftest
              uri: ws://calendar-timespend-frontend:7000
              order: 10
              predicates:
                - Path=/calendar-timespend/perftest
              filters:
                - FullAccessAuthorizationJwtInjectingGatewayFilter=PERFTEST_USER,${JWT_HMAC_KEY}
                - RewritePath=/calendar-timespend/perftest, /socket
            - id: calendar-timespend-frontend-everything-else
              uri: http://calendar-timespend-frontend:8080
              order: 20
              predicates:
                - Path=/calendar-timespend/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/calendar-timespend/(?<segment>.*), /$\{segment}
            - id: calendar-balance-frontend-rsocket
              uri: ws://calendar-balance-frontend:7000
              order: 10
              predicates:
                - Path=/calendar-balance/socket
              filters:
                - RewritePath=/calendar-balance/socket, /socket
            - id: calendar-balance-frontend-everything-else
              uri: http://calendar-balance-frontend:8080
              order: 20
              predicates:
                - Path=/calendar-balance/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/calendar-balance/(?<segment>.*), /$\{segment}
            - id: calendar-repertorium
              uri: http://calendar-repertorium:8080
              order: 20
              predicates:
                - Path=/calendar-repertorium/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/calendar-repertorium/(?<segment>.*), /$\{segment}
            - id: balances
              uri: http://balances:8080
              order: 10
              predicates:
                - Path=/balances/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/balances/(?<segment>.*), /$\{segment}
            - id: vacation-certificate
              uri: http://payroll-vacationcertificate:8080
              order: 10
              predicates:
                - Path=/payroll-vacation-certificate/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/payroll-vacation-certificate/(?<segment>.*), /$\{segment}
            - id: webcomponents
              uri: http://ce-webcomponents:8080
              order: 10
              predicates:
                - Path=/webcomponents/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/webcomponents/(?<segment>.*), /$\{segment}
            - id: ff4j
              uri: http://ce-ff4j-server:8080
              order: 10
              predicates:
                - Path=/ff4j/**
              filters:
                - RewritePath=/ff4j/(?<segment>.*), /$\{segment}
            - id: preference
              uri: http://preference:8080
              order: 10
              predicates:
                - Path=/preference/**
              filters:
                - RewritePath=/preference/(?<segment>.*), /$\{segment}
            - id: CE-test-backend
              uri: http://test-websocket-service:8085
              predicates:
                - Path=/ce/**
            - id: CE-test-backend-2
              uri: http://test-websocket-service:8085
              predicates:
                - Path=/chro/**
            - id: grpc-has-prio
              uri: https://clink-${OKTETO_NAMESPACE}.devtst.okt.acerta.io
              predicates:
                - Path=/be.acerta.ce.clink.integrationapi.driven.onboarding.OnboardingService/**
              filters:
                - OnboardingGrpcApiFilter
    ---
    frontend:
      properties:
        ENABLE_FRONTEND_LOGGING: "true"
        WEBCOMPONENT_HOST: "frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io"
        GATEWAY_HOST: "frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io"
        GATEWAY_CONTEXT: ""
        GATEWAY_COOKIE: "OKTETO_CE_GATEWAY_SESSION"
        GATEWAY_COOKIE_REFRESHED_EVENT: "ce-gateway-refreshed"
    filter:
      propertyresolver:
        overriddenFilterUrls: >
          /connect/
        requireQueryParam: false
        ellegibleFileExtensions: "js,mjs,html"
        cache:
          ttl: 10 
    acerta:
      keycloak:
        registration-service-name: ce-gateway
      gateway:
        keep-alive-path: /keep-alive/index.html
        logout-uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/authenticate
    ff4j:
      api:
        url: http://ce-ff4j-server:8080/api/ff4j
    logging:
      pattern.level: 'trace_id=%mdc{trace_id} span_id=%mdc{span_id} principal=%mdc{user_id} %5p'
      level:
        be.acerta.fegateway: DEBUG
        org.springframework: INFO
        org.springframework.cloud.gateway: DEBUG                                                              # gateway debugging
        org.springframework.cloud.gateway.handler: INFO
        org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter: INFO
        org.springframework.security: DEBUG                                                                   # security debugging
        org.springframework.security.web.server.DefaultServerRedirectStrategy: INFO                           # logging OIDC redirection details (to IDP > keep-alive)
        org.springframework.security.web.server.context: INFO                                                 # logging SecurityContext (user details)
        org.springframework.security.web.server.authorization.AuthorizationWebFilter: INFO                    # validation authorization successfull / failed
        org.springframework.security.web.server.authorization.DelegatingReactiveAuthorizationManager: INFO    # logs what resource is requested (w/ checking auth)
        org.springframework.security.web.server.util.matcher: INFO
        reactor.netty.http: INFO
        reactor.netty.http.server.AccessLog: WARN
        be.acerta.fegateway.gateway.filters.SessionFilter: INFO
  sealedsecret:
    gatewayclient:
      secret: AgCHRB/V7EX6MIGama1SKxH2zPZfbfixPjwuYlGPoXyrctUvwdMRukIfIzNgjvQZ/pHOtTHrg/R5e9xY2zml4drjelTfb68jT9CmFJMobRbydOWu4CzJmiFNwfDR/HNFahl+Ty/+N2//xyYcH1bMATJubk8UiTLnwRRLML39cHl425hsE30yW5nqu5DyX3Yh3N2YxwkqYyO4lM8MbEzze/yFSHIUeDhPoXN/VA1wGy2QkG+XOY2vjLEE9qhyrojFtU0pmLywjDQECIym4c8e5RVVlE9lVQq/YZ+rxnsZA75J+qeKLnufYlQuqquLnYG0P1zgu5fIm1ldA3LhvGV8DXAgoBLeHsQ9mA7QH+CrEQin62KHl/rWj63DHWb4XQbYtPGRFBOjTr2wNfacUQlzv1qAKrGOi4yiJZoD9bhi4/2Jc6NcjW5ALq0rm+J/zpWMuu+c6cKdPmbG5hDVeevd2vi0bKcEGr/WliY8UkVemqTLORs7+pDn0a3H5b+X8sTIe5+6P2IWUfI8cIOU624JzerofUZNptw8tp8Tv1o/oEKiPlt+T1rPmEwW2BF5N17rPlWnF5055tKWU9NLN5wZFt0q5Fy+t8CxTBni5rei5WS+B/vTvgakyFjtn8EGQ8o8yy+TpaC3MtHjfx3fK7oxkYmrTYC4mORJuQecHr4y3d2SJfjB5WOtwa45pRR9jbIVfDw2eQn8Z2cdz0FgwS5Zg1BA4WXh7/VJ+Em50x47HWq+Gg==
  ingress:
    http:
      annotations:
        dev.okteto.com/generate-host: "true"
    grpc:
      annotations:
        dev.okteto.com/generate-host: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  loki:
    enabled: true
    tenant: dev
  tempo:
    enabled: true
    tenant: dev
keycloak-boot:
  fullnameOverride: keycloak-boot
  enabled: false
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 5m
      memory: 512Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  extraEnv:
    REALM_IMPORT_FILE: "file:///config/acerta-realm.json"
    GATEWAY_SUBDOMAIN_SUFFIX: "-${OKTETO_NAMESPACE}"
    GATEWAY_DOMAIN: ".tst.connectevolution.global.dns"
    TZ: "Europe/Brussels"

ce-webcomponents:
  fullnameOverride: ce-webcomponents
  enabled: false
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi
  image:
    tag: "latest"
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

ce-fake-everesst:
  fullnameOverride: ce-fake-everesst
  enabled: false
  resources:
    limits:
      memory: 768Mi
    requests:
      cpu: 20m
      memory: 384Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  application_yml: |
    spring:
      profiles:
        active: always-active
    ---
    ff4j.api.url:  http://ce-ff4j-server:8080/api/ff4j
    ---
    # Pulsar
    pulsar:
      enabled: true
      broker.url: pulsar://pulsar-standalone:6650
      defaults:
        consumer:
          tenant: acerta
          namespace: payroll
        producer:
          tenant: everesst
          namespace: payroll
      consumers:
        PulsarAdjustmentBookedIntegrationEventHandler:
          subscription:
            topic: employee-out-fake
      producers:
        WorktimePrioritizationCalculatedIntegrationEventPublisher:
          topic: worktime
        ScheduledRedisJailTestEventPublisher:
          topic: testRedisJail
    
    logging:
      level:
        root: INFO
        be.acerta.ce.fake.everesst: DEBUG

ce-fake-chro:
  fullnameOverride: ce-fake-chro
  enabled: false
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 5m
      memory: 256Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  application_yml: ""

ce-authorization-service:
  fullnameOverride: ce-authorization-service
  enabled: false
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 256Mi
  sealedsecret:
    redis:
      password: AgBvJecr46uhBJDSAlKeomWM4ztuqMrr3jvNWhd0cH6KLz/wPSvvz/Nq0Bga1ZZ82lv5SvDVnKixAEAGkUY0yxxPXUbxFEncficX/o0XGNUmRyMezCZBNbsk1T24Qqd5my0gkq2Rx0gVc/ja6eYx+mg71yV0MIjyJ51MeAeBq9Oe4/lsdN5W6g+6NXGeiOVhBhVehZzSxTBZcZZTu0QZ1vXVpCPctReBKeu2MmpNqyUO0kytNlM907i/CLdwea5710DjIiHqsXbIyipfzjyTPfI72KmizmkitpFIZMj9xIXnlRQp4gS82MaBFNBfouZ7PXyL1ECZG0anmEOQhrHhg6rRP9HChfbCnuDKVyXqw/XhaieFTLt8fdXHRMZOqVRt4jt8ZzEPgjPo/8zNcWCTgTfuqa2WVpqXTLGr8af0vQ/i5Tw2Zs+Pl2kPfsOj3sJfDSaCVAc67I3UPbvAQBK1yqYeE4Ci/xvJDMnvWqkirYo1j7xgb27iWIZ3Ez7iEUHMsNCYJGVOZRwWibgRVc04oOQzHTSdzUv7I739Lm9VJThdZBirnU4Jn2alc4nsP/VdgLiBfleXjmPf+rD++pGP/+j9FkAQh/0qC2sKot4ZtA5rYEdgVNMkm2QdwF/WU4gDaG+u1QM4VETFHGTUczuLNibwudfiTsYmmDJZ/iOQctBOT8r117IMkmuyWZV9Eyi3j+hEBgLUfvlcXA==
  application_yml: |-
    spring:
      profiles:
        active: okteto, always-active
  loki:
    enabled: true
    tenant: dev
  tempo:
    enabled: true
    tenant: dev

spring-cloud-dataflow:
  enabled: false
  fullnameOverride: spring-cloud-dataflow
  skipper:
    enabled: false
  rabbitmq:
    enabled: false
  server:
    resources:
      limits:
        memory: 1024Mi
      requests:
        cpu: 30m
        memory: 512Mi
    image:
      registry: harbor.tools.acerta.io
      repository: acerta-releases/acerta-connect-evolution/spring-cloud-dataflow-2.11.2-debian-11-r5
      tag: 1.0.0
    initContainers:
      - name: init-db
        image: harbor.tools.acerta.io/acerta-releases/acerta-connect-evolution/mssql-client:latest
        command:
          - "sh"
          - "-c"
          - |
            export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest'
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE DATABASE connectevolution"
            $CMD -U $USERNAME -P $PASSWORD -Q "ALTER DATABASE connectevolution SET RECOVERY SIMPLE"
            export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest -d connectevolution'
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA spring_cloud_dataflow"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN scdf_user WITH PASSWORD ='ScdfUserPass123', default_database = connectevolution"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN scdf_ddl with PASSWORD = 'ScdfDdlPass123', default_database = connectevolution"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER scdf_user FROM LOGIN scdf_user WITH DEFAULT_SCHEMA = spring_cloud_dataflow"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER scdf_ddl FROM LOGIN scdf_ddl WITH DEFAULT_SCHEMA = spring_cloud_dataflow"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE scdf_user_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE scdf_ddl_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: spring_cloud_dataflow TO scdf_user_role "
            $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: spring_cloud_dataflow TO scdf_ddl_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE, CREATE VIEW TO scdf_ddl_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'scdf_user_role', 'scdf_user'"
            $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'scdf_ddl_role', 'scdf_ddl'"
        env:
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: scdf-server-init-datasource-cred
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: scdf-server-init-datasource-cred
                key: password
    configuration:
      streamingEnabled: false
      defaultSpringApplicationJSON: false
    ingress:
      enabled: true
      className: ""
      annotations:
        dev.okteto.com/generate-host: "true"
    extraEnvVars:
      - name: SPRING_APPLICATION_JSON
        value: |-
          { \"maven\": { \"local-repository\": null,\"remote-repositories\": { \"repo1\": { \"url\": \"https://nexus.global.dns/repository/maven-public/\" } } } }
  mariadb:
    enabled: false
  externalDatabase:
    password: ScdfDdlPass123
    driver: com.microsoft.sqlserver.jdbc.SQLServerDriver
    dataflow:
      url: jdbc:sqlserver://mssql-latest:1433;sendStringParametersAsUnicode=false;encrypt=false;database=connectevolution
      username: scdf_ddl
    hibernateDialect: org.hibernate.dialect.SQLServer2012Dialect
  extraDeploy:
    - apiVersion: bitnami.com/v1alpha1
      kind: SealedSecret
      metadata:
        annotations:
          sealedsecrets.bitnami.com/cluster-wide: "true"
        name: scdf-server-init-datasource-cred
      spec:
        encryptedData:
          username: AgDAvnpD+6Jk3gRHdARgmuUeRyKmq6lkPTU7YNJhfehCgmzwsZOsAnceRSwjzyDZFsVJQjmexNnQylgl6DyX4FlYgudIvkIS8L/U72g0C2QUyrCHYmqgbyjH65c9+yng3iveYnWCj29X+o1zyIN90YVfsINeRmx80gC7NevNfOdS1oF7B1o/drziPetobrj/USd7N+5R3bNk5niwJYf8EVUpcy8fkVZHZQnddO8FiZi/4vQaYZ+KnwOO56tAoxizgQIV9ozcB+WznLbQqx6GH94g4FPJ+KReLRdGiohOIIKjno8NlqY1nCT6ZxP6l3UzNFXiq3t0BzEd0bvmZmTFrtjisaLsL8TPjHqsdNspfDrTYzQIoaZVDXKtwlPm2ua2Sk6Sa7z6cBe2EVKAa9AgQGfXsiCSKt+/Z0wcvkMOi19hV3DeQTbYk7eBHVoupzkhG+v3XqF9uzpZPPNLIP3sbDPCqPUa1StnXN6T8rUCTIaRUCijWXi+Kzh1Q4lImqYxad8ZwlB9xzDvR9LSWiToi7LMJ17CqPd2WlDoKlUkWAQXg2NYr6SwRPbOYMUgx9mah0aOb2np9DFXXv0IvrB9d2yf+4aOIpnwDbub8aHVPX/qc0qhlvHAtKJ1G0nMdlM0IVWmbt3LmWzLktjFwFlynq9W1yVSby7A6Wc1/S2DYjuwklYhDW0MSQHq7nL863/aii105w==
          password: AgCdt5/5f2nDW2Zy1gKZt98Vbk6J1g/6X6goylU9Vs49srHuINbZmAuWZxdpSy4iCgUT3hALTl1k7p4fQHVKKW2n3hUhRw0tN85drj8vSIodYfJ+MadEKlvVuhZjdHPXpCtOIPcz0OIExkGwBnV/oAsZpOxYnp0pbom43wCsmKRSJzhJMIJNrCq9WNKYbP6k62UJzPC+B9JmmWYCgfPRRIGivRD412ZKQTMnUgtarjaETG5nHHcIHaZxNStkLswrCqQDklYHDaRks3w4LqrEfWsTQLJUumMZvTe95uYsm5GGExTXUgjtDcKhnlANfF2xX7c2gJDlfCYnkYb7zFhccQ/gE6p+ORpc8wBQZXPV3jTVt6dkpNO4a8DCZQcDEouUS5V20lUwtnnIarlZ4DgtSsco+IquVUcU70mBny6yBAvZx27Burf/g1YVIMdhGPkt7HCtJ05BrpcytNUa50UDlS8B6wumx8HaORzWZFTcaUhyfnpGRz853X+XlgzHkghBZqTXAhCHTLrvpz1CAwjhNup6CzBAyrQp/GGGxybwzk6glZkXjMoQ6FiVrGKXuaDAkKFWu4Nu8JiC5wc8bY4Mw4c4gsckfre2HvoL67Va6MOqhpw/Xc5QsYxTtf55hwG5GvjKLb0ZYhrpGPOGu6O6Hjv5rYL/bFmLd+8FZoWRmiNK+X4TCAsyMbBV2gFcU5pOQyUMKOV+J9R28g==
        template:
          data: null
          metadata:
            annotations:
              sealedsecrets.bitnami.com/cluster-wide: "true"
            name: scdf-server-init-datasource-cred

wiremock:
  enabled: false
  fullnameOverride: ce-fake-connect-be
  service:
    annotations:
      dev.okteto.com/auto-ingress: "true"

ce-scdf-client:
  fullnameOverride: scdf-client
  enabled: false
  resources:
    requests:
      cpu: 5m
      memory: 512Mi
    limits:
      memory: 1024Mi
  sealedsecret:
    datasource:
      username: AgBs5RLfbeb+29cAe2fzOLrrqljDK6tVKEbdgwVmy+IG7FbQ066Rdj8gDiH0Q3uGkv/z0SXNb0qrcPvYWdN9H5IewMXlQiHab3aoYz+MplXC3q0D0v1Nc1MP2xZzKoWNZ6MaWuIm8dwSbwYUak+QNDizLXGhvVUjRq5KevBojwLTnSCCgrDIRR7TBIxzp1YSTYG/ngQVarEpEFJwRl+EckIStZ9p4vLxth2DkMU90N+XeI4R7nXR+3stoszN4S5ykBqr4gh1p/iZ5/67uPanGYXpfb3yHPFEWrVr9wwgRVmBSaOH3SeECcDqgAvmd06+/gMcmgIe4DW3SnaK99qJCC92AHGp0BJSiPJLShxQLzkEM0o2dDqRrJaOQu5AO/fpt41JhC6QD5qREAHBLApM6c7GKtOvHnzZXP6Z5g4BHuR5p5D8bvl7WgYdC9dAIvmuj+5z+rPUSw2BaZlDRGOBWyWUrNPm36RHd2cM1LQbuENn3zSLQZ5tn5l0xAFhejqGwgjCwypiCtUgsEAdkwkDzEaCFB4RJnElg97mz0RRNQSkHBoZ0f7k/K8BEb2MHHcrMOlGtVkUikSDv96KB1UPwiTR7sETUpDwmvDl9QzWemnpC4w6aKV5h01cqVWe9/mfzY37rNtl+97LCNKJ3vDpQIfi3abtFnS0FgcXKSXgqV57Gz/e7p/TOwGwX8pULUEcE4WL8j/Ft/AbQ9Q=
      password: AgB0fxcnehHs0/gTumPGzQpCL6z1otBGhgnz3PnLhbQ/TvnYoEhawGjQmygsCu4mnklB8/ZmzkQtlpNFP4Nfu6UhC+03HaJm4bmoQmNHO7lj6iuP0EjUDlWZFc0ZEkckwfpUoY1xBD4Gds8mb0N1VpB7d9hz4kuugHCMq1+FuYgaGRC6NqegpXl8G6biTzXXd2GjZgNLyRAAAg21qKDbwQJLkIm6hqEQZF+ujh7iJHTyHwVERVbV73WADQDorb0YdHuwRbjPNJdCrQWgWxBT7jZ0/mfzu7JDXl+xdyabq+Jf4fLoLAnRzMLifUL7ceKervAqUx6hP3DuJHQXz8EeQrwuvA7DOAr7TbUPVVDd+tjncFMZbz1s3ZBEJTJzPeElxqN6bOHE4lDP2+dP0M9v9ViR3fC1wTtzXoWxM1YQEc4Z7bHDX3mUGF2alv7h1bgX3NDsrXpG+24zwRpdqb7M9FccGszm8Dz5/E8Sr8q4chx2XRnnrDounObD5KIGZ4GU+eMZsxEy2LCFH27m7ZEtZj3MYMd6ywhtVTqHuRydpI3Wzxpew3ORTMkwmu0AEPnAOD0pwQB2hSJQiRXv/S+Dbh/dNXxIRpVE6fwU/CvG3X8zNCpATnKqsRtf+tmLRYIl1t9wOdfwieHYdN9FWjjELZnjg2vhA2R/dXp9D31om6hR9jCX6iFJSVPncQ9gNfULCPOd/xKh7L2EFCi1JyxTQ7c=
    liquibasedatasource:
      username: AgCFKG50nUrHLByWtk4kFDVHBgHgO096WduDfQ4gIHVBSeT4OUC8gN25xwPUlr0/s/hZaf1PBKIVROEcFXbF0gXVLfC0eeaKGJwI6TRuqVeLFegxmumH9qjj0dJozQJ3Qt9ywxBvJG/R7UkTBtOE4IQRU7Xf7D4ao57eLJMUuH57THw5QAkD++0DDHio9NtiNksJ2OLGuDvjwcCIF4u07h36WPuwtnvZT2RmS6Zc/+VKMcEWiHliFrKiY1dlnGdDp1N63bRI2BfsX5j7XqTs4dQApYK3com0ZsPepZYKe9lFKm4hMbbNS48vnT401J88AN7lsf8BHFDKVaIh6dj3HeIchygdQ8kA1AyEsRcgmKZY1ztmB/gJl6QODP6EmMEZAnVV+CxrV+WDxw3Gb0rLUN0eI/VVOXHLxlh8lGg4OUBuTBepohjHiS7bFBY4LdpHAnPvFpMPPZ0ehJyTZ00YGX1xehpqOAzVtfcDoz4Rx2NpJtreaZ2X+f2l6IIH+REX4GVgukCjN7I0DRpdtyMaUt1rfYOJan3IMXCl7iFj0KlRBTmMPsBU5wnmNCMNusiZ61xKsuda7M9hxEm97XVrzCT4VTAJy4xKvJEAEFp8wTInkcMPG5yuz/Fltmxe6TO475dOFdMsQPmb/MQOmaj9ujN2lLGn7qeb+i6aqFc36+3KMmr68B3WJMUPQk69XbLPsV1VGbK56NvUxg==
      password: AgAjzSbZLZss5KrMjclqHngQu3H34Y2JP/IdsuUXRHjtIL6s83L684xu9p1jQmVfQa/K4iBzjgUj420iJWWgebkZnWlBqX3mh48VkklIwqh5DH1weW9PcPrze/vPqCx+VqKqZLyiUbXVK9JneP2WaYX3f6pazlWTxJUXUh6evL5t5eTx922ZeA5zA8bf/Y3FKJpM8ZLaR0Wm/jKupOw0tdsltXwn76mUEkjAHk4bP3FsbSTyQH5p95BMj8FUUoN6Tn5t0MGzemh0QmmqkfglJMmqBdKcIHX/ou6bzuOFetzEWZOajlkzb6CYUGQdRw1AgeuMwGnx7tR/m7JZXWvo+H17SQX71SGkAmHhJoDuyFDl1GZIBikAvejOelyzcNFCwki57GBc1kUYu1ccjZu1debuipfU8qBS4OD+P/SgLrK80crveyTP6YkX+SXM7II+PXDPnuVP6ZqNxGQeoDIYlxd/7BI/zx2Gu/ENWN+bCRBIV9lEXbZbVGKgAAO0pArFvOi+5U5wJ9ZynhcPLo3jNBf8yFoEDkh/rNiYJl1YAhukV6oryzhdmIm21uDTbNTVKKEu3SrpoPww/EG6fzXJJpswfrUzDosh9ngmQ8NElbliHAdHHUTrXqUloELWwrlaDJSo4tpTNLM81ecfwki0r0dQHajsBW1yPy6Gxyzdnyt/4R8D1DqlouyR/C9JJnC9MNdHCSsrRfSlhECRzdMkIA==
  loki:
    enabled: true
    tenant: tst
  tempo:
    enabled: true
    tenant: tst
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"