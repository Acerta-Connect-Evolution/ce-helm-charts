mssql-latest:
  fullnameOverride: mssql-latest
  enabled: true
  persistence:
    dataSize: 1Gi
    userlogSeparateClaim: false
    tempSeparateClaim: false
    userdbSeparateClaim: false

elasticsearch:
  fullnameOverride: elasticsearch-master
  enabled: true
  image: nexus.global.dns:8443/acerta-dev/elasticsearch
  imageTag: 7.15.0
  replicas: 2
  minimumMasterNodes: 1
  volumeClaimTemplate.resources.requests.storage: 1Gi
  sysctlInitContainer.enabled: false
  extraEnvs:
    - name: TZ
      value: Europe/Brussels
  ingress:
    className: ""
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"
      kubernetes.io/ingress.class: nginx

redis:
  fullnameOverride: redis
  enabled: true
  architecture: standalone
  global:
    redis:
      password: Admin123

pulsar-standalone:
  fullnameOverride: pulsar-standalone
  enabled: true
  ingress:
    className: ""
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"
  resources:
    requests:
      cpu: "500m"
      memory: "2048Mi"
    limits:
      memory: "4096Mi"
      cpu: "1000m"

pulsar-admin-console:
  fullnameOverride: pulsar-admin-console
  enabled: true
  local_json: |
    {
        "auth_mode": "none",
        "cluster_name": "standalone",
        "tenant": "public",
        "oauth_client_id": "",
        "server_config": {
            "port": "6454",
            "pulsar_url": "http://pulsar-standalone:8080",
            "websocket_url": "https://websocket.example.com:8500",
            "function_worker_url": "",
            "log_level": "info",
            "token_path": "",
            "admin_token": "",
            "token_secret": "",
            "ssl": {
                "verify_certs": true,
                "hostname_validation": true,
                "ca_path": "",
                "cert_path": "",
                "key_path": ""
            },
            "kubernetes": {
                "k8s_namespace": "pulsar",
                "kubernetes_service_host": "",
                "service_port": ""
            },
            "user_auth": {
                "username": "",
                "password": ""
            },
            "oauth2": {
                "identity_provider_url": "",
                "token_endpoint": "",
                "grant_type": "password"
            }
        },
        "polling_interval": "10000",
        "ca_certificate": "",
        "api_version": "2.8.3",
        "notice_text": "",
        "functions_disabled": "false",
        "render_monitoring_tab": "false",
        "grafana_url": "",
        "clients_disabled": "false",
        "host_overrides": {
            "pulsar": "http://localhost:6650",
            "ws": "ws://localhost:8080",
            "http": "http://localhost:8964"
        }
    }
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

pulsar-client:
  fullnameOverride: pulsar-client
  enabled: true
  env:
    pulsar:
      adminurl: http://pulsar-standalone:8080
      allowedclusters: standalone
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

ce-ff4j-server:
  fullnameOverride: ce-ff4j-server
  enabled: true
  env:
    ff4jserver:
      elasticSearchUrl: http://elasticsearch-master:9200
      elasticSearchContext: not_used_yet
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

ce-repertoriumservice:
  fullnameOverride: ce-repertoriumservice
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

pulsar-init-job:
  fullnameOverride: pulsar-init-job
  enabled: true
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: pulsar-standalone:8080/admin/v2/brokers/health;pulsar-client:8080/actuator/health
  script: |
    echo "Create Tenant [connect-evolution]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [connect-evolution/calendar-acl-sync]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-sync' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [everesst]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [everesst/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [acerta]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [acerta/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"

frontend-services-gateway:
  fullnameOverride: frontend-services-gateway
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  application_yml: |
    spring:
      # profile 'always-active' should always be active :) as the corresponding application-always-active.yml (in gateway jar)
      # contains some config that is always needed under normal circumstances. We pushed that config to the application-always-active.yml
      # to remove unnecessary clutter from the application.yml file.
      profiles:
        active: always-active #, nosecurity
      redis:
        host: redis-master
        port: 6379
        password: Admin123
      security:
        oauth2:
          client:
            provider:
              keycloak:
                issuer-uri: https://keycloak-boot-kristof86.tst.connectevolution.global.dns/auth/realms/acerta
                token-uri: https://keycloak-boot-kristof86.tst.connectevolution.global.dns/auth/realms/acerta/protocol/openid-connect/token
                authorization-uri: https://keycloak-boot-kristof86.tst.connectevolution.global.dns/auth/realms/acerta/protocol/openid-connect/auth
            registration:
              ce-gateway:
                provider: keycloak
                client-id: ce-gateway
                client-secret: Bl5oJEkQgYadCXlNRny1YNCzZOfz7qC0
                redirect-uri: https://frontend-services-gateway-kristof86.tst.connectevolution.global.dns/login/oauth2/code/ce-gateway
                scope:
                  - openid
                  - email
                  - profile
                  - roles
      cloud:
        gateway:
          default-filters:
            - TokenRelay
            - RemoveRequestHeader=Cookie
          routes:
            - id: heartbeat
              uri: https://frontend-services-gateway-kristof86.tst.connectevolution.global.dns
              order: 1000
              predicates:
                - Path=/heartbeat
              filters:
                - RewritePath=/heartbeat, /session-refresh
            - id: gateway-amf
              uri: https://frontend-services-gateway-kristof86.tst.connectevolution.global.dns
              order: 1000
              predicates:
                - Path=/AMF/**
              filters:
                - RewritePath=/AMF/(?<segment>.*), /$\{segment}
            - id: calendar-timespend-frontend-rsocket
              uri: ws://ce-calendar-timespend-frontend:7000
              order: 1000
              predicates:
                - Path=/calendar-timespend/socket
              filters:
                - RewritePath=/calendar-timespend/socket, /socket
            - id: calendar-timespend-frontend-everything-else
              uri: http://ce-calendar-timespend-frontend:8080
              order: 2000
              predicates:
                - Path=/calendar-timespend/**
              filters:
                - RewritePath=/calendar-timespend/(?<segment>.*), /$\{segment}
            - id: ff4j
              uri: http://ce-ff4j-server:8080
              order: 10
              predicates:
                - Path=/ff4j/**
              filters:
                - RewritePath=/ff4j/(?<segment>.*), /$\{segment}
    ---
    acerta:
      keycloak:
        registration-service-name: ce-gateway
      gateway:
        keep-alive-path: /keep-alive/index.html
        logout-uri: https://frontend-services-gateway-kristof86.tst.connectevolution.global.dns/authenticate
        session-timeout: 90

keycloak-boot:
  fullnameOverride: keycloak-boot
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  extraEnv:
    REALM_IMPORT_FILE: "file:///config/acerta-realm.json"
    GATEWAY_SUBDOMAIN_SUFFIX: "-${OKTETO_NAMESPACE}"
    GATEWAY_DOMAIN: ".tst.connectevolution.global.dns"
    TZ: "Europe/Brussels"