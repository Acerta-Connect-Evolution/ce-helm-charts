mssql-latest:
  fullnameOverride: mssql-latest
  enabled: true
  resources:
    limits:
      memory: 3072Mi
    requests:
      cpu: 5m
      memory: 1536Mi
  persistence:
    dataSize: 1Gi
    userlogSeparateClaim: false
    tempSeparateClaim: false
    userdbSeparateClaim: false

elasticsearch:
  fullnameOverride: elasticsearch-master
  enabled: true
  resources:
    limits:
      memory: 3072Mi
    requests:
      cpu: 20m
      memory: 1536Mi
  image: nexus.global.dns:8443/acerta-dev/elasticsearch
  imageTag: 7.15.0
  replicas: 2
  minimumMasterNodes: 1
  volumeClaimTemplate.resources.requests.storage: 1Gi
  sysctlInitContainer.enabled: false
  extraEnvs:
    - name: TZ
      value: Europe/Brussels
  ingress:
    className: ""
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"

redis:
  fullnameOverride: redis
  enabled: true
  resources:
    requests:
      cpu: 5m
      memory: 1024Mi
    limits:
      memory: 128Mi
  architecture: standalone
  global:
    redis:
      password: Admin123

pulsar-standalone:
  fullnameOverride: pulsar-standalone
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 3072Mi
    limits:
      memory: 4096Mi
  ingress:
    className: ""
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"
  persistence:
    enabled: true
    dataSize: 5Gi
    dataAccessMode: ReadWriteOnce
  podSecurityContext:
    runAsUser: 0
    fsGroupChangePolicy: "OnRootMismatch"
  securityContext:
    runAsUser: 0

pulsar-admin-console:
  fullnameOverride: pulsar-admin-console
  enabled: true
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi
  local_json: |
    {
        "auth_mode": "none",
        "cluster_name": "standalone",
        "tenant": "public",
        "oauth_client_id": "",
        "server_config": {
            "port": "6454",
            "pulsar_url": "http://pulsar-standalone:8080",
            "websocket_url": "https://websocket.example.com:8500",
            "function_worker_url": "",
            "log_level": "info",
            "token_path": "",
            "admin_token": "",
            "token_secret": "",
            "ssl": {
                "verify_certs": true,
                "hostname_validation": true,
                "ca_path": "",
                "cert_path": "",
                "key_path": ""
            },
            "kubernetes": {
                "k8s_namespace": "pulsar",
                "kubernetes_service_host": "",
                "service_port": ""
            },
            "user_auth": {
                "username": "",
                "password": ""
            },
            "oauth2": {
                "identity_provider_url": "",
                "token_endpoint": "",
                "grant_type": "password"
            }
        },
        "polling_interval": "10000",
        "ca_certificate": "",
        "api_version": "2.8.3",
        "notice_text": "",
        "functions_disabled": "false",
        "render_monitoring_tab": "false",
        "grafana_url": "",
        "clients_disabled": "false",
        "host_overrides": {
            "pulsar": "http://localhost:6650",
            "ws": "ws://localhost:8080",
            "http": "http://localhost:8964"
        }
    }
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

axon-server-calendar:
  fullnameOverride: axon-server-calendar
  enabled: true
  resources:
    limits:
      memory: 2048Mi
    requests:
      cpu: 10m
      memory: 1024Mi
  image:
    # Note: the name of the repository is used throughout the chart to figure if we should configure for SE or EE
    # "axoniq/axonserver" is the SE Docker image. Any other (custom) image means that the chart will configure for EE
    repository: axoniq/axonserver
    pullPolicy: IfNotPresent
    tag: "4.6.7-dev"
  extraEnvs:
    - name: AXONIQ_AXONSERVER_DEVMODE_ENABLED
      value: "true"
    - name: AXONIQ_AXONSERVER_METRICS_GRPC_ENABLED
      value: "true"
    - name: AXONIQ_AXONSERVER_METRICS_GRPC_PROMETHEUSENABLED
      value: "true"
    - name: AXONIQ_AXONSERVER_KEEP-ALIVE-TIME
      value: "0"
    - name: AXONIQ_AXONSERVER_KEEP-ALIVE-TIMEOUT
      value: "604800000"
    - name: AXONIQ_AXONSERVER_MIN-KEEP-ALIVE-TIME
      value: "604800000"
  persistence:
    enabled: false
    accessModes: [ ReadWriteOnce ]
    size: 3Gi
  java:
    jvmOptions:
      timezoneOptions: "-Duser.timezone=Europe/Brussels"
  ingress:
    enabled: true
    annotations:
      dev.okteto.com/generate-host: "true"

pulsar-client:
  fullnameOverride: pulsar-client
  enabled: true
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 5m
      memory: 512Mi
  env:
    pulsar:
      adminurl: http://pulsar-standalone:8080
      allowedclusters: standalone
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

pulsar-init-job:
  fullnameOverride: pulsar-init-job
  enabled: true
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: pulsar-standalone:8080/admin/v2/brokers/health;pulsar-client:8080/actuator/health
  script: |
    echo "Create Tenant [connect-evolution]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [connect-evolution/calendar-acl-sync]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-sync' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Namespace [connect-evolution/calendar-acl-sync]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-cdc' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Namespace [connect-evolution/calendar]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [everesst]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [everesst/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [acerta]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [acerta/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Set retention for [connect-evolution/calendar-acl-cdc] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-cdc/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [connect-evolution/calendar-acl-sync] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-sync/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [connect-evolution/calendar] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [acerta/payroll] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/acerta/namespaces/payroll/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Set retention for [everesst/payroll] to 1 month"
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/everesst/namespaces/payroll/retention' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "retentionTimeInMinutes":"30d",
           "retentionSizeInMB":"-1"
        }'
    echo "Retention Set"
    echo "Create Source [connect-evolution/calendar-acl-cdc/dicco-debezium-source]"
    sleep 30
    curl -X 'POST' \
      'pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-cdc/sources' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
           "name":"dicco-debezium-source",
           "parallelism": 1,
           "config":{
              "database.hostname":"t-sqldicco.global.dns",
              "database.port":"1433",
              "database.user":"connect_evolution_user",
              "database.password":"smethmBM354GEmnsrge",
              "database.dbname":"DICCO",
              "database.server.name":"cdc",
              "table.include.list":"ACERTA.GBTEMC01,ACERTA.GBTEMC02,ACERTA.GBTEMC06,ACERTA.GBTEMC03,ACERTA.GBTPAA30,ACERTA.GBTPAA31,ACERTA.GBTPAA32,ACERTA.GBTPAA01,ACERTA.GBTPAA02,ACERTA.GBTPAA10,ACERTA.GBTPAA12,ACERTA.GBTPAA51,ACERTA.GBTOAA01,ACERTA.GBTOAA03,ACERTA.GBTEMR01,ACERTA.GBTEMR02,ACERTA.GBTEMR20,ACERTA.GBTEMR23,ACERTA.GBTACD01,ACERTA.GBTSSR02",
              "snapshot.mode":"schema_only",
              "snapshot.isolation.mode":"read_committed",
              "topic.namespace":"connect-evolution/calendar-acl-cdc",
              "task.class":"io.debezium.connector.sqlserver.SqlServerConnectorTask",
              "value.converter":"org.apache.kafka.connect.json.JsonConverter",
              "key.converter":"org.apache.kafka.connect.json.JsonConverter",
              "database.history":"org.apache.pulsar.io.debezium.PulsarDatabaseHistory",
              "database.tcpKeepAlive":"true",
              "decimal.handling.mode":"double",
              "database.history.pulsar.topic":"dicco-debezium-source-history-topic",
              "database.history.pulsar.service.url":"pulsar://pulsar-standalone:6650",
              "pulsar.service.url":"pulsar://pulsar-standalone:6650",
              "source.table.include.list":".*\\..*",
              "time.precision.mode":"connect",
              "transforms":"RegisteredConverter,ModifiedConverter",
              "transforms.RegisteredConverter.type":"org.apache.kafka.connect.transforms.TimestampConverter",
              "transforms.RegisteredConverter.format":"yyyy-MM-dd HH-mm-ss.SSSSSS",
              "transforms.RegisteredConverter.field":"REG_TS",
              "transforms.RegisteredConverter.target.type":"Timestamp",
              "transforms.ModifiedConverter.type":"org.apache.kafka.connect.transforms.TimestampConverter",
              "transforms.ModifiedConverterModifiedConverter.format":"yyyy-MM-dd HH-mm-ss.SSSSSS",
              "transforms.ModifiedConverter.field":"MUT_TS",
              "transforms.ModifiedConverter.target.type":"Timestamp"
           }
        }'
    echo ""
    echo "Source Created"

ff4j-init-job:
  fullnameOverride: ff4j-init-job
  enabled: true
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: ce-ff4j-server:8080
  script: ""

db-init-job:
  fullnameOverride: db-init-job
  enabled: true
  image:
    repository: nexus.global.dns:8443/acerta-connect-evolution/mssql-client
  initContainers:
    waitForMssql:
      enabled: true
      server:
        host: mssql-latest
        user: sa
        password: Admin123
  script: |
    export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest'
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE DATABASE connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "ALTER DATABASE connectevolution SET RECOVERY SIMPLE"
    export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest -d connectevolution'
    echo "init CALENDAR_AXON"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA calendar_axon"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_axon_user WITH PASSWORD ='CalendarAxonUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_axon_ddl with PASSWORD = 'CalendarAxonDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_axon_user FROM LOGIN calendar_axon_user WITH DEFAULT_SCHEMA = calendar_axon"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_axon_ddl FROM LOGIN calendar_axon_ddl WITH DEFAULT_SCHEMA = calendar_axon"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_axon_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_axon_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_axon TO calendar_axon_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_axon TO calendar_axon_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO calendar_axon_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_axon_user_role', 'calendar_axon_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_axon_ddl_role', 'calendar_axon_ddl'"
    echo "init CALENDAR_REPERTORIUM"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA calendar_repertorium"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_repertorium_user WITH PASSWORD ='CalendarRepertoriumUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN calendar_repertorium_ddl with PASSWORD = 'CalendarRepertoriumDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_repertorium_user FROM LOGIN calendar_repertorium_user WITH DEFAULT_SCHEMA = calendar_repertorium"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER calendar_repertorium_ddl FROM LOGIN calendar_repertorium_ddl WITH DEFAULT_SCHEMA = calendar_repertorium"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_repertorium_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE calendar_repertorium_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_repertorium TO calendar_repertorium_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: calendar_repertorium TO calendar_repertorium_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO calendar_repertorium_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_repertorium_user_role', 'calendar_repertorium_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'calendar_repertorium_ddl_role', 'calendar_repertorium_ddl'"
    echo "init CLINK"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA clink"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN clink_user WITH PASSWORD ='ClinkUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN clink_ddl with PASSWORD = 'ClinkDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER clink_user FROM LOGIN clink_user WITH DEFAULT_SCHEMA = clink"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER clink_ddl FROM LOGIN clink_ddl WITH DEFAULT_SCHEMA = clink"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE clink_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE clink_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: clink TO clink_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: clink TO clink_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO clink_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'clink_user_role', 'clink_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'clink_ddl_role', 'clink_ddl'"
    echo "init USER_PREFERENCE"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA user_preference"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN user_preference_user WITH PASSWORD ='UserPreferenceUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN user_preference_ddl with PASSWORD = 'UserPreferenceDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER user_preference_user FROM LOGIN user_preference_user WITH DEFAULT_SCHEMA = user_preference"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER user_preference_ddl FROM LOGIN user_preference_ddl WITH DEFAULT_SCHEMA = user_preference"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE user_preference_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE user_preference_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: user_preference TO user_preference_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: user_preference TO user_preference_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO user_preference_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'user_preference_user_role', 'user_preference_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'user_preference_ddl_role', 'user_preference_ddl'"
    echo "init PAYROLL_VACATION_CERTIFICATE"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA payroll_vacation_certificate"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN payroll_vacationcertificate_user WITH PASSWORD ='PayrollVacationCertificateUserPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN payroll_vacationcertificate_ddl with PASSWORD = 'PayRollVacationCertificateDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER payroll_vacationcertificate_user FROM LOGIN payroll_vacationcertificate_user WITH DEFAULT_SCHEMA = payroll_vacation_certificate"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER payroll_vacationcertificate_ddl FROM LOGIN payroll_vacationcertificate_ddl WITH DEFAULT_SCHEMA = payroll_vacation_certificate"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE payroll_vacationcertificate_user_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE payroll_vacationcertificate_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: payroll_vacation_certificate TO payroll_vacationcertificate_user_role "
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: payroll_vacation_certificate TO payroll_vacationcertificate_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO payroll_vacationcertificate_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'payroll_vacationcertificate_user_role', 'payroll_vacationcertificate_user'"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'payroll_vacationcertificate_ddl_role', 'payroll_vacationcertificate_ddl'"
    echo "init INIT_LOAD_BATCH"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA init_load_batch"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN init_load_batch_ddl with PASSWORD = 'InitLoadBatchDdlPass123', default_database = connectevolution"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER init_load_batch_ddl FROM LOGIN init_load_batch_ddl WITH DEFAULT_SCHEMA = init_load_batch"
    $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE init_load_batch_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: init_load_batch TO init_load_batch_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE TO init_load_batch_ddl_role"
    $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'init_load_batch_ddl_role', 'init_load_batch_ddl'"
  extraDeploy:
  - apiVersion: bitnami.com/v1alpha1
    kind: SealedSecret
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      name: db-init-job-datasource-cred
    spec:
      encryptedData:
        username: AgDAvnpD+6Jk3gRHdARgmuUeRyKmq6lkPTU7YNJhfehCgmzwsZOsAnceRSwjzyDZFsVJQjmexNnQylgl6DyX4FlYgudIvkIS8L/U72g0C2QUyrCHYmqgbyjH65c9+yng3iveYnWCj29X+o1zyIN90YVfsINeRmx80gC7NevNfOdS1oF7B1o/drziPetobrj/USd7N+5R3bNk5niwJYf8EVUpcy8fkVZHZQnddO8FiZi/4vQaYZ+KnwOO56tAoxizgQIV9ozcB+WznLbQqx6GH94g4FPJ+KReLRdGiohOIIKjno8NlqY1nCT6ZxP6l3UzNFXiq3t0BzEd0bvmZmTFrtjisaLsL8TPjHqsdNspfDrTYzQIoaZVDXKtwlPm2ua2Sk6Sa7z6cBe2EVKAa9AgQGfXsiCSKt+/Z0wcvkMOi19hV3DeQTbYk7eBHVoupzkhG+v3XqF9uzpZPPNLIP3sbDPCqPUa1StnXN6T8rUCTIaRUCijWXi+Kzh1Q4lImqYxad8ZwlB9xzDvR9LSWiToi7LMJ17CqPd2WlDoKlUkWAQXg2NYr6SwRPbOYMUgx9mah0aOb2np9DFXXv0IvrB9d2yf+4aOIpnwDbub8aHVPX/qc0qhlvHAtKJ1G0nMdlM0IVWmbt3LmWzLktjFwFlynq9W1yVSby7A6Wc1/S2DYjuwklYhDW0MSQHq7nL863/aii105w==
        password: AgCdt5/5f2nDW2Zy1gKZt98Vbk6J1g/6X6goylU9Vs49srHuINbZmAuWZxdpSy4iCgUT3hALTl1k7p4fQHVKKW2n3hUhRw0tN85drj8vSIodYfJ+MadEKlvVuhZjdHPXpCtOIPcz0OIExkGwBnV/oAsZpOxYnp0pbom43wCsmKRSJzhJMIJNrCq9WNKYbP6k62UJzPC+B9JmmWYCgfPRRIGivRD412ZKQTMnUgtarjaETG5nHHcIHaZxNStkLswrCqQDklYHDaRks3w4LqrEfWsTQLJUumMZvTe95uYsm5GGExTXUgjtDcKhnlANfF2xX7c2gJDlfCYnkYb7zFhccQ/gE6p+ORpc8wBQZXPV3jTVt6dkpNO4a8DCZQcDEouUS5V20lUwtnnIarlZ4DgtSsco+IquVUcU70mBny6yBAvZx27Burf/g1YVIMdhGPkt7HCtJ05BrpcytNUa50UDlS8B6wumx8HaORzWZFTcaUhyfnpGRz853X+XlgzHkghBZqTXAhCHTLrvpz1CAwjhNup6CzBAyrQp/GGGxybwzk6glZkXjMoQ6FiVrGKXuaDAkKFWu4Nu8JiC5wc8bY4Mw4c4gsckfre2HvoL67Va6MOqhpw/Xc5QsYxTtf55hwG5GvjKLb0ZYhrpGPOGu6O6Hjv5rYL/bFmLd+8FZoWRmiNK+X4TCAsyMbBV2gFcU5pOQyUMKOV+J9R28g==
      template:
        data: null
        metadata:
          annotations:
            sealedsecrets.bitnami.com/cluster-wide: "true"
          name: db-init-job-datasource-cred
  extraEnvs:
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          name: db-init-job-datasource-cred
          key: username
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          name: db-init-job-datasource-cred
          key: password

scdf-init-job:
  fullnameOverride: scdf-init-job
  enabled: true
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: "http://scdf-client:8080/actuator/health"
  script: |
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "init",
          "containerImage": "acerta-connect-evolution/init-task:0.10.0",
          "metadataJar": "be.acerta.ce.batch:init-task:jar:metadata:0.10.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "migrate-employer",
          "containerImage": "acerta-connect-evolution/migrate-employer-task:0.19.0",
          "metadataJar": "be.acerta.ce.batch:migrate-employer-task:jar:metadata:0.19.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "onboard-ce",
          "containerImage": "acerta-connect-evolution/onboard-ce-task:1.2.0",
          "metadataJar": "be.acerta.ce.batch:onboard-ce-task:jar:metadata:1.2.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "notify",
          "containerImage": "acerta-connect-evolution/notify-task:0.8.0",
          "metadataJar": "be.acerta.ce.batch:notify-task:jar:metadata:0.8.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "cleanup",
          "containerImage": "acerta-connect-evolution/cleanup-task:0.7.0",
          "metadataJar": "be.acerta.ce.batch:cleanup-task:jar:metadata:0.7.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/apps' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "time-code",
          "containerImage": "acerta-connect-evolution/time-code-task:0.3.0",
          "metadataJar": "be.acerta.ce.batch:time-code-task:jar:metadata:0.3.0",
          "force": false
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "migrate-employer",
          "definition": "init && migrate-employer && onboard-ce && notify",
          "description": "Migrate Employer Task"
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "cleanup",
          "definition": "init && cleanup",
          "description": "Cleanup Employer Task"
      }'
    curl -X 'POST' \
      'scdf-client:8080/api/v1/tasks' \
      -H 'accept: */*' \
      -H 'Content-Type: application/json' \
      -d '{
          "name": "time-code",
          "definition": "time-code",
          "description": "Sync Acerta Wide Time Codes Task"
      }'

ce-ff4j-server:
  fullnameOverride: ce-ff4j-server
  enabled: true
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 256Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  loki:
    enabled: true
    tenant: dev
  tempo:
    enabled: true
    tenant: dev

frontend-services-gateway:
  fullnameOverride: frontend-services-gateway
  enabled: true
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 512Mi
  sealedsecret:
    gatewayclient:
      secret: AgCHRB/V7EX6MIGama1SKxH2zPZfbfixPjwuYlGPoXyrctUvwdMRukIfIzNgjvQZ/pHOtTHrg/R5e9xY2zml4drjelTfb68jT9CmFJMobRbydOWu4CzJmiFNwfDR/HNFahl+Ty/+N2//xyYcH1bMATJubk8UiTLnwRRLML39cHl425hsE30yW5nqu5DyX3Yh3N2YxwkqYyO4lM8MbEzze/yFSHIUeDhPoXN/VA1wGy2QkG+XOY2vjLEE9qhyrojFtU0pmLywjDQECIym4c8e5RVVlE9lVQq/YZ+rxnsZA75J+qeKLnufYlQuqquLnYG0P1zgu5fIm1ldA3LhvGV8DXAgoBLeHsQ9mA7QH+CrEQin62KHl/rWj63DHWb4XQbYtPGRFBOjTr2wNfacUQlzv1qAKrGOi4yiJZoD9bhi4/2Jc6NcjW5ALq0rm+J/zpWMuu+c6cKdPmbG5hDVeevd2vi0bKcEGr/WliY8UkVemqTLORs7+pDn0a3H5b+X8sTIe5+6P2IWUfI8cIOU624JzerofUZNptw8tp8Tv1o/oEKiPlt+T1rPmEwW2BF5N17rPlWnF5055tKWU9NLN5wZFt0q5Fy+t8CxTBni5rei5WS+B/vTvgakyFjtn8EGQ8o8yy+TpaC3MtHjfx3fK7oxkYmrTYC4mORJuQecHr4y3d2SJfjB5WOtwa45pRR9jbIVfDw2eQn8Z2cdz0FgwS5Zg1BA4WXh7/VJ+Em50x47HWq+Gg==
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  loki:
    enabled: true
    tenant: dev
  tempo:
    enabled: true
    tenant: dev
  application_yml: |
    spring:
      # profile 'always-active' should always be active :) as the corresponding application-always-active.yml (in gateway jar)
      # contains some config that is always needed under normal circumstances. We pushed that config to the application-always-active.yml
      # to remove unnecessary clutter from the application.yml file.
      profiles:
        active: always-active #, nosecurity
      redis:
        host: redis-master
        port: 6379
        password: Admin123
      security:
        oauth2:
          client:
            provider:
              keycloak:
                issuer-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/auth/realms/acerta
                token-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/auth/realms/acerta/protocol/openid-connect/token
                authorization-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/auth/realms/acerta/protocol/openid-connect/auth
            registration:
              ce-gateway:
                provider: keycloak
                client-id: ce-gateway
                client-secret: replaced-by-sealed-secret
                redirect-uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/login/oauth2/code/ce-gateway
                scope:
                  - openid
                  - email
                  - profile
                  - roles
      cloud:
        gateway:
          default-filters:
            - TokenRelay
            - RemoveRequestHeader=Cookie
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
          globalcors:
            corsConfigurations:
              '[/**]':
                allowedMethods: "*"
                allowedHeaders: "*"
                allowedOrigins: "*"
          routes:
            - id: heartbeat
              uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io
              order: 1000
              predicates:
                - Path=/heartbeat
              filters:
                - RewritePath=/heartbeat, /session-refresh
            - id: calendar-timespend-frontend-rsocket
              uri: ws://calendar-timespend-frontend:7000
              order: 1000
              predicates:
                - Path=/calendar-timespend/socket
              filters:
                - RewritePath=/calendar-timespend/socket, /socket
            - id: calendar-timespend-frontend-rsocket-perftest
              uri: ws://calendar-timespend-frontend:7000
              order: 1000
              predicates:
                - Path=/calendar-timespend/perftest
              filters:
                - FullAccessAuthorizationJwtInjectingGatewayFilter=PERFTEST_USER,${JWT_HMAC_KEY}
                - RewritePath=/calendar-timespend/perftest, /socket
            - id: calendar-timespend-frontend-everything-else
              uri: http://calendar-timespend-frontend:8080
              order: 2000
              predicates:
                - Path=/calendar-timespend/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/calendar-timespend/(?<segment>.*), /$\{segment}
            - id: calendar-balance-frontend-rsocket
              uri: ws://calendar-balance-frontend:7000
              order: 1000
              predicates:
                - Path=/calendar-balance/socket
              filters:
                - RewritePath=/calendar-balance/socket, /socket
            - id: calendar-balance-frontend-everything-else
              uri: http://calendar-balance-frontend:8080
              order: 2000
              predicates:
                - Path=/calendar-balance/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/calendar-balance/(?<segment>.*), /$\{segment}
            - id: ff4j
              uri: http://ce-ff4j-server:8080
              order: 10
              predicates:
                - Path=/ff4j/**
              filters:
                - RewritePath=/ff4j/(?<segment>.*), /$\{segment}
            - id: balances
              uri: http://balances:8080
              order: 10
              predicates:
                - Path=/balances/**
              filters:
                - RewritePath=/balances/(?<segment>.*), /$\{segment}
            - id: vacation-certificate
              uri: http://payroll-vacation-certificate-service:8080
              order: 10
              predicates:
                - Path=/payroll-vacation-certificate/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/payroll-vacation-certificate/(?<segment>.*), /$\{segment}
            - id: calendar-repertorium
              uri: http://calendar-repertorium:8080
              order: 10
              predicates:
                - Path=/calendar-repertorium/**
              filters:
                - PropertyInResponseResolvingGatewayFilter
                - RewritePath=/calendar-repertorium/(?<segment>.*), /$\{segment}
            - id: user-preference
              uri: http://user-preference:8080
              order: 10
              predicates:
                - Path=/user-preference/**
              filters:
                - RewritePath=/user-preference/(?<segment>.*), /$\{segment}
            - id: webcomponents
              uri: http://ce-webcomponents:8080
              order: 10
              predicates:
                - Path=/webcomponents/**
              filters:
                - RewritePath=/webcomponents/(?<segment>.*), /$\{segment}
            - id: CE-test-backend
              uri: http://test-websocket-service:8085
              predicates:
                - Path=/ce/**
            - id: CE-test-backend-2
              uri: http://test-websocket-service:8085
              predicates:
                - Path=/chro/**
    ---
    frontend:
      properties:
        WEBCOMPONENT_HOST: "frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io"
    filter:
      propertyresolver:
        requireQueryParam: false
        ellegibleFileExtensions: "js,mjs,html"
        cache:
          enabled: false
          ttl: 10 
    acerta:
      keycloak:
        registration-service-name: ce-gateway
      gateway:
        session-cookie-domain: acerta.io
        keep-alive-path: /keep-alive/index.html
        logout-uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/authenticate
        session-timeout: 90
    ff4j:
      api:
        url: https://ce-ff4j-server-${OKTETO_NAMESPACE}.devtst.okt.acerta.io/api/ff4j

keycloak-boot:
  fullnameOverride: keycloak-boot
  enabled: true
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 5m
      memory: 512Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  extraEnv:
    REALM_IMPORT_FILE: "file:///config/acerta-realm.json"
    GATEWAY_SUBDOMAIN_SUFFIX: "-${OKTETO_NAMESPACE}"
    GATEWAY_DOMAIN: ".tst.connectevolution.global.dns"
    TZ: "Europe/Brussels"

ce-webcomponents:
  fullnameOverride: ce-webcomponents
  enabled: true
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi
  image:
    tag: "latest"
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

ce-fake-everesst:
  fullnameOverride: ce-fake-everesst
  enabled: true
  resources:
    limits:
      memory: 768Mi
    requests:
      cpu: 20m
      memory: 384Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  application_yml: |
    spring:
      profiles:
        active: always-active
    ---
    ff4j.api.url:  http://ce-ff4j-server:8080/api/ff4j
    ---
    # Pulsar
    pulsar:
      enabled: true
      broker.url: pulsar://pulsar-standalone:6650
      defaults:
        consumer:
          tenant: acerta
          namespace: payroll
        producer:
          tenant: everesst
          namespace: payroll
      consumers:
        PulsarAdjustmentBookedIntegrationEventHandler:
          subscription:
            topic: employee-out-fake
      producers:
        WorktimePrioritizationCalculatedIntegrationEventPublisher:
          topic: worktime
        ScheduledRedisJailTestEventPublisher:
          topic: testRedisJail
    
    logging:
      level:
        root: INFO
        be.acerta.ce.fake.everesst: DEBUG

ce-fake-chro:
  fullnameOverride: ce-fake-chro
  enabled: true
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 5m
      memory: 256Mi
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  application_yml: ""

ce-authorization-service:
  fullnameOverride: ce-authorization-service
  enabled: true
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 256Mi
  sealedsecret:
    redis:
      password: AgBvJecr46uhBJDSAlKeomWM4ztuqMrr3jvNWhd0cH6KLz/wPSvvz/Nq0Bga1ZZ82lv5SvDVnKixAEAGkUY0yxxPXUbxFEncficX/o0XGNUmRyMezCZBNbsk1T24Qqd5my0gkq2Rx0gVc/ja6eYx+mg71yV0MIjyJ51MeAeBq9Oe4/lsdN5W6g+6NXGeiOVhBhVehZzSxTBZcZZTu0QZ1vXVpCPctReBKeu2MmpNqyUO0kytNlM907i/CLdwea5710DjIiHqsXbIyipfzjyTPfI72KmizmkitpFIZMj9xIXnlRQp4gS82MaBFNBfouZ7PXyL1ECZG0anmEOQhrHhg6rRP9HChfbCnuDKVyXqw/XhaieFTLt8fdXHRMZOqVRt4jt8ZzEPgjPo/8zNcWCTgTfuqa2WVpqXTLGr8af0vQ/i5Tw2Zs+Pl2kPfsOj3sJfDSaCVAc67I3UPbvAQBK1yqYeE4Ci/xvJDMnvWqkirYo1j7xgb27iWIZ3Ez7iEUHMsNCYJGVOZRwWibgRVc04oOQzHTSdzUv7I739Lm9VJThdZBirnU4Jn2alc4nsP/VdgLiBfleXjmPf+rD++pGP/+j9FkAQh/0qC2sKot4ZtA5rYEdgVNMkm2QdwF/WU4gDaG+u1QM4VETFHGTUczuLNibwudfiTsYmmDJZ/iOQctBOT8r117IMkmuyWZV9Eyi3j+hEBgLUfvlcXA==
  application_yml: |-
    spring:
      profiles:
        active: okteto, always-active
  loki:
    enabled: true
    tenant: dev
  tempo:
    enabled: true
    tenant: dev

ce-user-preference:
  fullnameOverride: user-preference
  enabled: true
  resources:
    requests:
      cpu: 5m
      memory: 512Mi
    limits:
      memory: 1024Mi
  sealedsecret:
    redis:
      password: AgBvJecr46uhBJDSAlKeomWM4ztuqMrr3jvNWhd0cH6KLz/wPSvvz/Nq0Bga1ZZ82lv5SvDVnKixAEAGkUY0yxxPXUbxFEncficX/o0XGNUmRyMezCZBNbsk1T24Qqd5my0gkq2Rx0gVc/ja6eYx+mg71yV0MIjyJ51MeAeBq9Oe4/lsdN5W6g+6NXGeiOVhBhVehZzSxTBZcZZTu0QZ1vXVpCPctReBKeu2MmpNqyUO0kytNlM907i/CLdwea5710DjIiHqsXbIyipfzjyTPfI72KmizmkitpFIZMj9xIXnlRQp4gS82MaBFNBfouZ7PXyL1ECZG0anmEOQhrHhg6rRP9HChfbCnuDKVyXqw/XhaieFTLt8fdXHRMZOqVRt4jt8ZzEPgjPo/8zNcWCTgTfuqa2WVpqXTLGr8af0vQ/i5Tw2Zs+Pl2kPfsOj3sJfDSaCVAc67I3UPbvAQBK1yqYeE4Ci/xvJDMnvWqkirYo1j7xgb27iWIZ3Ez7iEUHMsNCYJGVOZRwWibgRVc04oOQzHTSdzUv7I739Lm9VJThdZBirnU4Jn2alc4nsP/VdgLiBfleXjmPf+rD++pGP/+j9FkAQh/0qC2sKot4ZtA5rYEdgVNMkm2QdwF/WU4gDaG+u1QM4VETFHGTUczuLNibwudfiTsYmmDJZ/iOQctBOT8r117IMkmuyWZV9Eyi3j+hEBgLUfvlcXA==
    initdatasource:
      username: AgAW+zPHy112Z1+uEI41kfFgsgmRTfRPVh6gPeYHlHrP+e7vACVo1RWVIMGjyu3ptD1ci7RI4RqDtws/14jYVq0J4zR6ya+bCsIUFBfpdmZuHwXRuqY6TPgicBt5ZGDu9UV4E8iUwARkB2ejwgCsNVJh9vGHSb1B1PtDdEehIBT/tLBkYaX57IAkKnDqKtliXXVXFUQ1YXcRl6veP23XvnKiRGUTOSjoTCVkrjtQDjv0665k4bxk42vlKp+F2Fks1b+mA1BflLEBPpN7+U0RchNiB0yrgXpjb71EgQjN+GZTrhW5aZ4eoLUPVer0YBuZVdU94SA4bR+b9KEUM2VDmOGv7Bhzjo35DWEbCH5wQvhMCnsLqyEiLSooWPlPZeWAea+uq6dTKf7vSXEVYR76IgUSL+Re0TVE9abezIvcoLsqJOEDXdvzqfwYe+0m79Fua2uXyMpDCtk74MW+RVDdcIOHtUvsU/h9mwxa/TNogoTaknCHD3yz5dE6mZgtM1kS0cxaiVoeQsR8FzR2Br1Ww5Zzs2QnzjT0CS/CdGX26CLN9EpTIAUiaryKGbguX5edlJTXgSJNntqpL4hc4P7avxUIUnZiFIYSODCB+a8CCubphMBqCmtzZILPbH16jfUWOhFkUoE11RRQxK4MBI9x6U3Gdr9wo9qK/MW+T91SlBYQssQbPVV2k2MOm+lytrwA2BKCMg==
      password: AgCIoIUdosgcg1e4niN66AbAnbtEY1eu3y9E33q2ZlOrXmXM5+EREC8gy9+9m+IetkK8Y3/ajcCXBOC3XrfUYDXJ9bzU5BCLW1f4ygpSwP5k+3nn2l8HkZZqxrv35HI+UVnxF2RuPw8COKyF/mPIOpDwsMyxRH7k1JnpR1+6l53AqjBEPQdgskFCCPZpOVexexZwkHdGzhsE2pq80M2wfDJ5YCI82on+rbNr9T7mfkh1R3zedWC4FqrBr6CEPnUf1f0Qr2CJ4DwA24UOHYsXTXC8hjMGzorNt7mScou5Z5TXSbJjiXJyG++6HTE9QZGpcE5bmDXXjLB8N4kAU/0S3FABr/s5g8Oqsgl7KQw+yXlHuDt9ww2BlTsPD76bdnXLEayJnRqPdTvlvdANbAT5gNi3wwsghLrtXG2sVrB0XXFKIPoCKJFqDEjKi55wFc4e8NBkn2fWK89IyB62JRQvGnAuRiH1q5KwL4npikSdRRHWmSKo3kldtgltgjg6YhExLVxBWM9ctC+NdN+VLUGNxALyGqiOvriRTqymNZPZuzfhxyTOOWWnW7bEZbUlOg7o4FODxtIGy6QdW96Itz34BO5YY1cPbxjcN309VzGzIPwbw0AtCB2th6uQUcGoxpAVpn3KFFpGatzesrKSv/PgFY53C3/jGwOZyTl/aJv53htdfdAuM3P9C7kE6h5V7XbKlUI+q/80GKPj2g==
    datasource:
      username: AgASg6OT7cKOcP9LMhkzbEvdTceSWBrZSyeqkEobZuYQl0RVjmAiTqYSfvI9JD+keJdIsWDx8znzsmxsptq3N4gGPuLifqEf1Q+/NXXQqBiyc6XC3OaeH/bshWBHpadBwXB9PnCwwmx4zW9gyZb8vaOW0zirAvdxdcpk2+cOg4tpKWaOumI4zSHWMvp353cuCeYtf2BfN4pqyIUlNhkg8VpXdy6vq1BKEKPwd+O0hVcOR0ej0wZ2BAH1Ik5UhcF75OWqwMC/piwN7liK08wqwt2rY+br7ZJ7L1YkzpXmoF7GlHFA7T+/CdoIkmZGFfJcbj8QECqsznw+T6lT0cmuqxxTt5JxJdfctup0pOIJhwgpjaNWTx3r035LZMykzxkNsmbJh3FABGNnTuD3dxvE+AEG3fBZsS4L6mUjNCdlnbqo3ShPJ2xV7P9fj5OyjNM5d1HIdWyC1gqqn5caAh2Trd5xmol7lpND/rGoaHyA+ec+xp5bf7rFogrAqNQ6gBmf/Iqk3sWuyQxq7p7zVlOQpq0WolWyJ5BNWBJE0n8RZCVylbtyy3A4Nmvv3LT8K+Z17KFzMZ3ut1l0rssPlgGzfEVdBPa9T5buVkfTwl9FfhnMi2vC1nu62vAesclZGrjQBG6mKq3RytSHi0cQJxCxUJXSMjp5lTyFJL7XLP1ew01ZD0zm1aWgF/vhDIElji08ugZ4G02wMMGDbOZ5L085WTcrHyMrR3gdiaR6ENirN6hboA==
      password: AgB9TQcXQJGEz94CTQ2jJm6QowbcSZFkIrh6PmSfrc0O+1cmnrcKZw5oiLtIfIF17TQCNWvR4evRm/U61C96ugUaHS4Z7oEs29rh29wvVIOwev9zEckDgb61re/jm7+WeQNUSZyxvkRDAefLnHpmeqIDZP+ALAU4pQp1gAL+q/62Ot4sDI21cJAHHus40bnog5X1KfnoKDq8uhnjQD/bomw31PDb9gHPss0CRTkEzDhrtz0jgC/JqokDqqcHcQBwH0s7fr+Y/46SZsUjuo5VQiXmRaDhgW0kc/80nTWtQiD5ik+oSJvTHJ40MLWPNvBixGwAN0+zl61qpnSdRsQYExW8gl/aaay8zyd+s1PKWqsAyEH6dgaXq3XkrqeJ4AZZy+HScFo/I1Flm25hKrCCp6YPwIB0LQ7MbTB+kqtSOYu52VNE+JykTtNgk6NuwupIc3sBRQqtSd3GxOfT58qFqN0FQF5i3mWz0WqbhGJobUJhv2xonTFbvlUR+oZ3OrAfoV5UGk0ISct0QlLg7CrTksiPKKRLOKgRgHQ9MXtrVwlCUpGYptD2FGpDteT0Epo5dMrsqL36b6rSI/IQnGXimBGsgOEI6LpVZaS6Az1Cj0UDFGBTtcAj1vN5wgvT98+eTfSzVsRs1zevKRcEGOu5vxmvmENHYSbROZuh7N8At035t06LHXcSsQ89UD9op98q6GRE7HbFjZ1UuovLF/iPWpLjpk0xN+Y=
    liquibasedatasource:
      username: AgA3WCJHgLXeyTgLzn8pgYNB6GW45XsUunO7JA9VSj5YeWkajn9VuNeuxkDz+TDEsfVomK/jIw1SD8APi9IPXPS0ZI2cjxrg7B4r1YQXs7IRNGXX6RAXmrxF8chAdsa8AmvYH/BY4jlkOLpKKY8KAfpvb0PdEn+QEPd4iKhrOVFi3EUUCZtNnqXwmYCxnbQyHGRJF7ZvSadst4gF6qu8S5371nFHeVNpUC05znLwfd3wQc+VxZpMk1NPOvBAg0JORsoUkWBh2v24VqHBuwTprbPDfeSoEfANdcJqg9khVImiS6DkBA6TqdVycfVy9ds4Tg0dyTobLaOLNlOvAIoWOtxxdF/hsDn+IfoU899as2HRxjByUkUMDreT+HWkv39/Og83UHlmzpvl/Qkp/z3hRTD/tMhxK6RP5umk+GqxIgHLUNA3wQecZxpRbefF5Z77xBVKVQaljeI8JlEDUx58hPI7zFWqLhIU6DHVPRw7Cn0CAgUZmIU4rFMhaN1Lkoq97B7796ztWW7zUeHNH3BhCngOO9DLdWlFOxUKSJFV2GfLKBu+DYD4Me20+fOFb9d5qtLfxBnFBsf7jYsvWhp03lhMYuZQZrkEAnv9fe1FrKnsd/wK6YlUL3+kaz4n3QjsOwVQR+yxLgB176Y0IJKsAdbka95XQ0m0p2JSpz73qDmeUp/R2r68f19TONhJEfKA5sEwLCc6wWaJu1iF/YPVIVi90AOvP6HhcQ1CgZAfGeY=
      password: AgCYuVV5ZYHPbBW9BRyJpOp4jy+uP5C4SP9CRJQ8mbOEI82AfUJyh4sliWVm8Oo2O+nzEhW11kl6xLGpbcTB5Qg0bGrzrofSSA/iaKrroPAzhABpSJTH42hqRlEGo+pGhZ0zI/xugZsavvxu6Qzhy2WjYwbJRvnuFho2CbFzydTolbZoVuy63bqUicpDjonbJuTUCbRIqOfQdA0Lo+jaC80uYvrSL3paf/q6nibCnST2A4dnE0qExUzNT37ozv1beXNRtAcQ7Csy7PNhl6z4OPQuef6AzSUqXrC3n0t+TTIihX4H5G+fz6rrJWqxy86bT+yPRxRee99/DdaSGORrE/TY0DrIw/KisoLH5TFfMFk+53j23o1aYWzZCpmcq1vS20ELIxG+x4a41mUGQga16xxtefGHHzfbXRnWDkiuzlnLtBzHxxKCkEfpjpFq4wOLUBtQfmU9IMV869FvNYw4haNKdBQsk3zFgUG2vB9Klj/WaSX12hQZIBs69i1bigux7xQnGAqOGEoskYU2vY3Mlz4mDmEcfTU3tCAKo1AR1l92aAWK6u+0qkI6iCCqWLkvhbKS1p9dSSkJESOlJqnx04lINeBBQGXADA63Tv/rq32sikLcSDl6WFe5gB7ghTJIkQ4jmW6vKPjcrmu1EyaSbj9y07Xji0UdmQ0eXED0ZpxtoUvw2ZzsiICU5kbK/DzQ+FtVGn3h7dgJL0Si+6akH/tz0pnf8JEkHEnvtFVj1G8=
  loki:
    enabled: true
    tenant: tst
  tempo:
    enabled: true
    tenant: tst
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"

spring-cloud-dataflow:
  enabled: true
  fullnameOverride: spring-cloud-dataflow
  skipper:
    enabled: false
  rabbitmq:
    enabled: false
  server:
    resources:
      limits:
        memory: 1024Mi
      requests:
        cpu: 30m
        memory: 512Mi
    image:
      registry: nexus.global.dns:8443
      repository: acerta-connect-evolution/spring-cloud-dataflow
      tag: 2.11.2-debian-11-r5
    initContainers:
      - name: init-db
        image: nexus.global.dns:8443/acerta-connect-evolution/mssql-client:latest
        command:
          - "sh"
          - "-c"
          - |
            export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest'
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE DATABASE connectevolution"
            $CMD -U $USERNAME -P $PASSWORD -Q "ALTER DATABASE connectevolution SET RECOVERY SIMPLE"
            export CMD='/opt/mssql-tools/bin/sqlcmd -S mssql-latest -d connectevolution'
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE SCHEMA spring_cloud_dataflow"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN scdf_user WITH PASSWORD ='ScdfUserPass123', default_database = connectevolution"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE LOGIN scdf_ddl with PASSWORD = 'ScdfDdlPass123', default_database = connectevolution"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER scdf_user FROM LOGIN scdf_user WITH DEFAULT_SCHEMA = spring_cloud_dataflow"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE USER scdf_ddl FROM LOGIN scdf_ddl WITH DEFAULT_SCHEMA = spring_cloud_dataflow"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE scdf_user_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "CREATE ROLE scdf_ddl_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: spring_cloud_dataflow TO scdf_user_role "
            $CMD -U $USERNAME -P $PASSWORD -Q "GRANT REFERENCES, ALTER, SELECT, INSERT, UPDATE, DELETE ON SCHEMA :: spring_cloud_dataflow TO scdf_ddl_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "GRANT CREATE TABLE, CREATE VIEW TO scdf_ddl_role"
            $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'scdf_user_role', 'scdf_user'"
            $CMD -U $USERNAME -P $PASSWORD -Q "EXEC sp_addrolemember 'scdf_ddl_role', 'scdf_ddl'"
        env:
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: scdf-server-init-datasource-cred
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: scdf-server-init-datasource-cred
                key: password
    configuration:
      streamingEnabled: false
      defaultSpringApplicationJSON: false
    ingress:
      enabled: true
      className: ""
      annotations:
        dev.okteto.com/generate-host: "true"
    extraEnvVars:
      - name: SPRING_APPLICATION_JSON
        value: |-
          { \"maven\": { \"local-repository\": null,\"remote-repositories\": { \"repo1\": { \"url\": \"https://nexus.global.dns/repository/maven-public/\" } } } }
  mariadb:
    enabled: false
  externalDatabase:
    password: ScdfDdlPass123
    driver: com.microsoft.sqlserver.jdbc.SQLServerDriver
    dataflow:
      url: jdbc:sqlserver://mssql-latest:1433;sendStringParametersAsUnicode=false;encrypt=false;database=connectevolution
      username: scdf_ddl
    hibernateDialect: org.hibernate.dialect.SQLServer2012Dialect
  extraDeploy:
    - apiVersion: bitnami.com/v1alpha1
      kind: SealedSecret
      metadata:
        annotations:
          sealedsecrets.bitnami.com/cluster-wide: "true"
        name: scdf-server-init-datasource-cred
      spec:
        encryptedData:
          username: AgDAvnpD+6Jk3gRHdARgmuUeRyKmq6lkPTU7YNJhfehCgmzwsZOsAnceRSwjzyDZFsVJQjmexNnQylgl6DyX4FlYgudIvkIS8L/U72g0C2QUyrCHYmqgbyjH65c9+yng3iveYnWCj29X+o1zyIN90YVfsINeRmx80gC7NevNfOdS1oF7B1o/drziPetobrj/USd7N+5R3bNk5niwJYf8EVUpcy8fkVZHZQnddO8FiZi/4vQaYZ+KnwOO56tAoxizgQIV9ozcB+WznLbQqx6GH94g4FPJ+KReLRdGiohOIIKjno8NlqY1nCT6ZxP6l3UzNFXiq3t0BzEd0bvmZmTFrtjisaLsL8TPjHqsdNspfDrTYzQIoaZVDXKtwlPm2ua2Sk6Sa7z6cBe2EVKAa9AgQGfXsiCSKt+/Z0wcvkMOi19hV3DeQTbYk7eBHVoupzkhG+v3XqF9uzpZPPNLIP3sbDPCqPUa1StnXN6T8rUCTIaRUCijWXi+Kzh1Q4lImqYxad8ZwlB9xzDvR9LSWiToi7LMJ17CqPd2WlDoKlUkWAQXg2NYr6SwRPbOYMUgx9mah0aOb2np9DFXXv0IvrB9d2yf+4aOIpnwDbub8aHVPX/qc0qhlvHAtKJ1G0nMdlM0IVWmbt3LmWzLktjFwFlynq9W1yVSby7A6Wc1/S2DYjuwklYhDW0MSQHq7nL863/aii105w==
          password: AgCdt5/5f2nDW2Zy1gKZt98Vbk6J1g/6X6goylU9Vs49srHuINbZmAuWZxdpSy4iCgUT3hALTl1k7p4fQHVKKW2n3hUhRw0tN85drj8vSIodYfJ+MadEKlvVuhZjdHPXpCtOIPcz0OIExkGwBnV/oAsZpOxYnp0pbom43wCsmKRSJzhJMIJNrCq9WNKYbP6k62UJzPC+B9JmmWYCgfPRRIGivRD412ZKQTMnUgtarjaETG5nHHcIHaZxNStkLswrCqQDklYHDaRks3w4LqrEfWsTQLJUumMZvTe95uYsm5GGExTXUgjtDcKhnlANfF2xX7c2gJDlfCYnkYb7zFhccQ/gE6p+ORpc8wBQZXPV3jTVt6dkpNO4a8DCZQcDEouUS5V20lUwtnnIarlZ4DgtSsco+IquVUcU70mBny6yBAvZx27Burf/g1YVIMdhGPkt7HCtJ05BrpcytNUa50UDlS8B6wumx8HaORzWZFTcaUhyfnpGRz853X+XlgzHkghBZqTXAhCHTLrvpz1CAwjhNup6CzBAyrQp/GGGxybwzk6glZkXjMoQ6FiVrGKXuaDAkKFWu4Nu8JiC5wc8bY4Mw4c4gsckfre2HvoL67Va6MOqhpw/Xc5QsYxTtf55hwG5GvjKLb0ZYhrpGPOGu6O6Hjv5rYL/bFmLd+8FZoWRmiNK+X4TCAsyMbBV2gFcU5pOQyUMKOV+J9R28g==
        template:
          data: null
          metadata:
            annotations:
              sealedsecrets.bitnami.com/cluster-wide: "true"
            name: scdf-server-init-datasource-cred

wiremock:
  enabled: true
  fullnameOverride: ce-fake-connect-be
  service:
    annotations:
      dev.okteto.com/auto-ingress: "true"

ce-scdf-client:
  fullnameOverride: scdf-client
  enabled: true
  resources:
    requests:
      cpu: 5m
      memory: 512Mi
    limits:
      memory: 1024Mi
  sealedsecret:
    datasource:
      username: AgBRXBVwD9HzoE8h9eaVuhuCVjmGbKDgCAK/zDrr2X4H7DeKtcyJaF2jmckMGSngjlQlfp/LbdZyermC51OCV0N5SYxpnhGFno9RUzo+UsfCsrP13F1pW2XadO2jbBiu0qdP4wW+HwU/8auj8s8spM8Xj1V76KpgLPrMpS+lsFvqAJE/enhKzM45mWQkqOv9qUCimHqB67uG35bMqAZ9PXPsVauzBSn7orvNSyuUokaGxushiKeK4C+ke+wbAuCyo0qGSN++vCZKRWFnoU9T/j/ge+1xSsyZGgzzpOAr2ztq0zeMKT7n4IQuP2NlnGjRjAWnq/HPOToOBPgnTKb/RgEjsSgeKeEXc9IXQ6wN3PxXTHCPts/wV1Z/tokyY5qW5kqJqE1WAv9SuQ/XzQuMPOEaSl4YvVB3MYaMr1t+uRlKwyW3g+oMh3shhx2K3rdt025h/dwwbG/YvQLPe2qx6Uk3G96CBgRtwCUa9JSdlBo3P1nguV2AmA4l9ymgvsmWu+b6fxlcaGHnzSs3Rhaa71S1OWDoLQiu+msrELTlLFU0S9Bxk4GkrFTIyp7/6884ea6zww1/jr28S1fZdt6YZhhHNucXiccGgQtX/pL77KUWY6M1PPut+RV+ztyol4+vu7tIGQ35fXof/1DWcJmVY+ZQvBsQyEdpIUDp0tXnBr+qy9VKUGheXGMoxa9YRDiVim+fRBZiIreoISFpqLLXKaarqcEHkZQ=
      password: AgCE/1rRSqLe6U9hzVBsc7Xyov2UYxNcz5mlKoNEXHzvWoJZvcavH6jJexaK6WTH+EYHyWes1/P6Wza88tj/8nEUHfS6Fs0kqFHWtci/pK7WZop4wRhtk2DPAkd8yb+Rqq79FhJC/jqLdh6xsyJnWBRSHUJStksfHzmU1Lkt8mVJJACigog/C1UhNImYtoQ8IEvkyRn+uoa8o9Hr8CzpwxZ0s3IaX2ixW5ZIruXf6Fj9J8d4WDwZgg2wwEFY717DB34+Tg0vgkpi6qXeA0sazbrxnWG30dCgi70QDpn1IdA+vyygc7Xc4/xcBAUrIY/ajSsitYiqcixKSSrdD1V45w8fzFBRi0/YqLEKKUQvdbEa+U5NS0YndGyN8S3WvXIGwsQKO59BBR7Y+21M5Td2o373XZFKXxdwG7AVCuRTvpZ9lpAbuTs2nu0af1lLLwvODIJhO7VJAcIz35Mtpo+7SUaL8qa/jAWGigZOMuX7mPimpZMIXXopaTMGQxl0YEADcRJnASRNteaXj4OKVoXbaxP1CTbllqtLpfrg/GwRrKkRetdkfxS4/zI3C1lKYovnCz6GbLv+PAK33uKCCqCZ0lLdbYBKpGMhvAq8RdA7webRQtCenrhkIYbHXfIuXOVIkK1FaOBA9BeEzm38qmG0ImQU3i4r1QcLGi4GvfdthbWxByYAT8lJ+YUpQOta2j5i6MSgE32iKMWaYpCjp5Jwe6MmNZKg/3Fg
    liquibasedatasource:
      username: AgBRXBVwD9HzoE8h9eaVuhuCVjmGbKDgCAK/zDrr2X4H7DeKtcyJaF2jmckMGSngjlQlfp/LbdZyermC51OCV0N5SYxpnhGFno9RUzo+UsfCsrP13F1pW2XadO2jbBiu0qdP4wW+HwU/8auj8s8spM8Xj1V76KpgLPrMpS+lsFvqAJE/enhKzM45mWQkqOv9qUCimHqB67uG35bMqAZ9PXPsVauzBSn7orvNSyuUokaGxushiKeK4C+ke+wbAuCyo0qGSN++vCZKRWFnoU9T/j/ge+1xSsyZGgzzpOAr2ztq0zeMKT7n4IQuP2NlnGjRjAWnq/HPOToOBPgnTKb/RgEjsSgeKeEXc9IXQ6wN3PxXTHCPts/wV1Z/tokyY5qW5kqJqE1WAv9SuQ/XzQuMPOEaSl4YvVB3MYaMr1t+uRlKwyW3g+oMh3shhx2K3rdt025h/dwwbG/YvQLPe2qx6Uk3G96CBgRtwCUa9JSdlBo3P1nguV2AmA4l9ymgvsmWu+b6fxlcaGHnzSs3Rhaa71S1OWDoLQiu+msrELTlLFU0S9Bxk4GkrFTIyp7/6884ea6zww1/jr28S1fZdt6YZhhHNucXiccGgQtX/pL77KUWY6M1PPut+RV+ztyol4+vu7tIGQ35fXof/1DWcJmVY+ZQvBsQyEdpIUDp0tXnBr+qy9VKUGheXGMoxa9YRDiVim+fRBZiIreoISFpqLLXKaarqcEHkZQ=
      password: AgCE/1rRSqLe6U9hzVBsc7Xyov2UYxNcz5mlKoNEXHzvWoJZvcavH6jJexaK6WTH+EYHyWes1/P6Wza88tj/8nEUHfS6Fs0kqFHWtci/pK7WZop4wRhtk2DPAkd8yb+Rqq79FhJC/jqLdh6xsyJnWBRSHUJStksfHzmU1Lkt8mVJJACigog/C1UhNImYtoQ8IEvkyRn+uoa8o9Hr8CzpwxZ0s3IaX2ixW5ZIruXf6Fj9J8d4WDwZgg2wwEFY717DB34+Tg0vgkpi6qXeA0sazbrxnWG30dCgi70QDpn1IdA+vyygc7Xc4/xcBAUrIY/ajSsitYiqcixKSSrdD1V45w8fzFBRi0/YqLEKKUQvdbEa+U5NS0YndGyN8S3WvXIGwsQKO59BBR7Y+21M5Td2o373XZFKXxdwG7AVCuRTvpZ9lpAbuTs2nu0af1lLLwvODIJhO7VJAcIz35Mtpo+7SUaL8qa/jAWGigZOMuX7mPimpZMIXXopaTMGQxl0YEADcRJnASRNteaXj4OKVoXbaxP1CTbllqtLpfrg/GwRrKkRetdkfxS4/zI3C1lKYovnCz6GbLv+PAK33uKCCqCZ0lLdbYBKpGMhvAq8RdA7webRQtCenrhkIYbHXfIuXOVIkK1FaOBA9BeEzm38qmG0ImQU3i4r1QcLGi4GvfdthbWxByYAT8lJ+YUpQOta2j5i6MSgE32iKMWaYpCjp5Jwe6MmNZKg/3Fg
  loki:
    enabled: true
    tenant: tst
  tempo:
    enabled: true
    tenant: tst
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"