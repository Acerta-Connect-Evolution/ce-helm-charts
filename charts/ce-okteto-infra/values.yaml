mssql-latest:

  enabled: true
  persistence:
    dataSize: 1Gi
    userlogSeparateClaim: false
    tempSeparateClaim: false
    userdbSeparateClaim: false

elasticsearch:
  enabled: true
  image: nexus.global.dns:8443/acerta-dev/elasticsearch
  imageTag: 7.15.0
  replicas: 1
  minimumMasterNodes: 1
  volumeClaimTemplate.resources.requests.storage: 1Gi
  sysctlInitContainer.enabled: false
  extraEnvs:
    - name: TZ
      value: Europe/Brussels

redis:
  enabled: true
  architecture: standalone
  global:
    redis:
      password: Admin123

pulsar-standalone:
  enabled: true

pulsar-client:
  enabled: true
  env:
    pulsar:
      adminurl: http://pulsar-standalone:8080
      allowedclusters: pulsar

ce-ff4j-server:
  env:
    ff4jserver:
      elasticSearchUrl: http://elasticsearch-master:9200
      elasticSearchContext: not_used_yet

ce-repertoriumservice:
  enabled: true

ce-clink:
  enabled: true
  extraEnvs:
    - name: CE_TECHNICAL_USER
      value: JF21626
  env:
    spring:
      redis:
        host: redis-master
      profiles:
        active: systst
    datasource:
      jdbcurl: jdbc:sqlserver://sqldicco.global.dns:1433;sendStringParametersAsUnicode=false;encrypt=false
      databasename: DICCO
    pulsar:
      broker:
        url: pulsar://pulsar-standalone:6650
  sealedsecret:
    redis:
      password: AgAR3+/FzJqdwWoipRaeGmFOcA4BPnOjTckOTBiZF7GONwfn3Dgj72R6M+3LCp02OpSpfRqNZcVkMq3u7j5y6h8R0n7FCa3lPpbSoIEa5jDSJP4FjMEiFyjYJjBVdjnI0kSLpxxKnDqqXu3c8Y/NACCmna5vP1LpPfH/KVqVYpsDtQjONuxdRiYhifNXmJXA/WB9uWxFSorznUHhq0OgvShWJjIAbjxUHaq6zsQrBEFGUaAL2tzlccU3W70tYwWahwtw7vEdT0YCgDO0B0cg2QWvFbqkZfH06xKloUCEOXMU0WlkDc/JuzIbCGnv7c5Si6PUOiLQJS/ghfWvSd/bMkhWUbBOhLkSvWMRpiHY2iy88D8+e3+GEzTsoY14M8BxGy8zjj8rApGxYZWaQRCdLirH+pUjB+3KLK/Xh3OLP8HLvx2ALlbk7PbZh72p4I10C1WgLsgat0kRJ4fmEzhN+6mBBaOUUuVvgzW7iJVgaASumziazDbJB7WYOICEIbKBc7JVyBUuSMWTlWP8AxMUG6XZqwTPAs8sm1gSkrm0pjteCGJkXFHCyCb8WszJVhLo2k2s09Z1DbNcNqewaWfzGhAbw8XdZmKe3FF4u8fUc4YpDwqyCv2t5/UV1ZfvkEWkDGHHwEzANsD5miPWPzGIQn50BCORJtRa1WSnfBDepUu54Mo6Ankax1Kj6nAssDVN5r4SZwI8VoIChQ==
    datasource:
      username: AgBR2NYLvhBKL6om2Rfs9coEYBoeyPXuLAsd7DDS+kCH2jaH1GoXeYWKKtrVtcRFg5Fe+4HyzMxm3MUMhxBgPgkJx3GcreVPLc576eR5moLzJr1289oHa0ip2SCbcMxMlP9fjjNl60KMzcc2wvR3cMH3IJCWgzU0umuiOu6bsqSObH3zwXgvfP6CrYhI2SYGSyCaMW65YDRdHqspm+EMRYK/i0l5e0k2VjU+YFSc3z5QWTZwBPKPgLUN0xA3XVY0hLVE/2UM+G/a72UB2tAyrXrw1i/suefYkfDnAyzwjObMPbHy6Yq6CBg8mhLxtvYFqkx0QmuRk1w2QB1JLXfJ7F0hpUvFX1NEhfbx5WH0ne290TNFIeZ7g72jRrh3HQw7rWmmtk2F4FHVB5DxAMpY8Bd8aahfhK6Q1CQOlbd5mPvalDpbgkCPAGvjnAJEH7ywWIqhb7/nVEN96Ft+2x/fuQTWTxELf2gen2DmxHB4NwMjorG2VRx+zCZ9GVGEATaCMTSlp5CGsq1yzQvwGyjguwSAx1OALHWBIVUFy5shJE04biErecYlLJB1LbS44yANi/ic/qYsqQ1VodII6el1lUsbH8Y15CbgL37Mhhdb24K6FAqXUdL/QBlAnYgwtL9Qi45X8mclsnduGs0iXa1Gg/qDpNK5Zch748QfOEBgaVFLlzaBUCvKR6oyLTEo1Y4Nw3HkyY2zihiiOgfKVpfnmEgbOE5OUyAR
      password: AgBHwhIOzsNJtDY3kDH10HUK6iBR8oGGmGPTfX5BVgDkumBOdNqVAC57w5gwqQhoEqumQPqvddwNNckJFLUJn+Of0QN5Fapjxf/ae2HIv5uIxX/y2bWkX5V27p6PFVOXlfQb03D2T5gpJHhTH7/G/+pBgm/ymnqM0RrcxzuNOmnUzLbVfqcJPI5Gsaya2IRWVkgn9ZKLmrupFkavnBmTCLoLtG0cMu9TqkHf0npN6SgVY2V0w3bKXxKnBEF0uqIQLtsze2CTdGF8iBjTZF7gKRkksZYe6kehg9lmKQqizetwYPm7Rvj4aVTi4iPd3hFuH9Qtngeltoo5Q9X6iP7WLdVlz0Bal+LVHnjA18ExgQ/EE0Tz0XjaZVuQungtalV47WOCRo33qnci6KZSR2cPyv7i6NrefZfrCscr5gAubsk2ItwYvc+N9pHVTbxtzDCEMI36byONM/WH/UagDQleYQ2Fc9s8ddMFDhVFH8Uq89k16MIQ/0Q1glp2KXiWLw95NmPREntck2Zmt09vG6WUU0lsNoAtK5/PQ6cvs1i/7t4fRpi5Nn9xEEVxHR62vW9y5kYrAJb+uZ6NdW4Ia32gRhh/gU830So3Qdm0ZqQBO4uyObsAq1HLxJcK0rb+XxfeQRI25Jl9g4sLzK3qIMK6OMTlcrEn/mPJnRcffCkoPu0DDD4EwRZHr86EZwPXdlx2cwlI1MlUIQlDCkrdd5Pq13CgELoo

ce-init-load:
  enabled: true
  env:
    spring:
      redis:
        host: redis-master
    datasource:
      jdbcurl: jdbc:sqlserver://mssql-latest:1433;sendStringParametersAsUnicode=false;encrypt=false
      databasename: init_load_batch
    diccodatasource:
      jdbcurl: jdbc:sqlserver://sqldicco.global.dns:1433;sendStringParametersAsUnicode=false;encrypt=false
      databasename: DICCO
    pulsar:
      broker:
        url: pulsar://pulsar-standadlone:6650
    sealedsecret:
      redis:
        password: AgAR3+/FzJqdwWoipRaeGmFOcA4BPnOjTckOTBiZF7GONwfn3Dgj72R6M+3LCp02OpSpfRqNZcVkMq3u7j5y6h8R0n7FCa3lPpbSoIEa5jDSJP4FjMEiFyjYJjBVdjnI0kSLpxxKnDqqXu3c8Y/NACCmna5vP1LpPfH/KVqVYpsDtQjONuxdRiYhifNXmJXA/WB9uWxFSorznUHhq0OgvShWJjIAbjxUHaq6zsQrBEFGUaAL2tzlccU3W70tYwWahwtw7vEdT0YCgDO0B0cg2QWvFbqkZfH06xKloUCEOXMU0WlkDc/JuzIbCGnv7c5Si6PUOiLQJS/ghfWvSd/bMkhWUbBOhLkSvWMRpiHY2iy88D8+e3+GEzTsoY14M8BxGy8zjj8rApGxYZWaQRCdLirH+pUjB+3KLK/Xh3OLP8HLvx2ALlbk7PbZh72p4I10C1WgLsgat0kRJ4fmEzhN+6mBBaOUUuVvgzW7iJVgaASumziazDbJB7WYOICEIbKBc7JVyBUuSMWTlWP8AxMUG6XZqwTPAs8sm1gSkrm0pjteCGJkXFHCyCb8WszJVhLo2k2s09Z1DbNcNqewaWfzGhAbw8XdZmKe3FF4u8fUc4YpDwqyCv2t5/UV1ZfvkEWkDGHHwEzANsD5miPWPzGIQn50BCORJtRa1WSnfBDepUu54Mo6Ankax1Kj6nAssDVN5r4SZwI8VoIChQ==
      datasource:
        username: AgA0p1XQjfvJPnJCEPDEJvpZsYv12uvNoOoM8E7Xh47C8oY96LsaRv+MSd2scWE848z3b8jmdwLjrgt6+2fVcRckQIeTKvTrUUIuscy4ZwO1iBpMlLHUyl/Xi+nuVjGk+1spjM3H9Db68vLv93MShq4oSGZWHhkWWpRGvSYA+SEdk0bxRdJAF+T7cGAL5OJBqsfFp+8cVOkfmF41r/LZcyxBEzkGSJMgEAFz8y2KJtuD6MsqX3v9IeHyyPhyyjTccEcagqVbBZnhoLUzLthwPc+vCO1CLwBflut+kX/vbVBkyXUHjZZBaFi01MVPq6kjnnS1jZWyFR1opsQDHq0TKmu4dKuxGdrcz940C5rZdTbI+ObptBLS5ltt7tyZuYtNtALhMIhrhTGqEPrG88x4UYzMc5GEEkG4TNtI3h15JEr20/wuVuHR2PCeCa9nLuQKoH2xzEMBeUlxCkkLPEitKm2LI8MxX5skhJe0MlUvFyb9rT7uRSg30H5xHJQ2h/l9OH4LKXIk3uv4fcNX9rjPH8/0Xsc5IZyIaQgYZT9L5Lg977w2wV3OJcUu76CxX0nXak/d3IqqucW5zhRUxla41cAed48M7eMpHMDPSuO3hBNTCPVXJDs1wAOiZTedKFizeYGa2WfaxHOWCgcllJDHK4BM0pqFQBlYsEQ5Zwt4J7UMjj7IGhZ7iodGZ/h0tQGJIntY46jxb7BlykH5b32O/n33svzvpw==
        password: AgAsEgphHobU0ji8CoQMnxYdQeK+jwdkGIj56oUWGoojmR7adDvrhxbf07NkHOYe27L00K7PvlBRsOzHQ6urRwkUvR6e/DxTlf2r0lGaNBGEbBibZLs+ueD2VySHiNKyVw5+tx/boe3JGJu72sUIiEUGaxskQW5/XzgCgkBNo9t1gBrxOxjGB62K30RNHxsyMJaA5pT8hvJIPRuuQZ6n0oMEzkFG3F4HavBEvBAjsBYOHRzsARvrILX7pEbaya1/m3wBSp7fJ1Ug/Pzy8c89ZU8e/BLK1Xg5gtbiMwHZSpjDzBUUhw40XSSESku2k/5+xzZn9ITK77ItpEAg7U6ESKJebzeCfN8s4iAgHeRYrIaGqd0EviFnywQvIV2p6gyOkn9oRRZy+uqVS3QNNG4NoBhR1/EK128RNDwGXnVVc993ud8OKesyYapPCVlz/DphC8TQfbU6npJP44wQahsnrBrx9bsHxz4duBWi8kNed/XfghreXz5kSONKQKQ82pvl1LwNQwhWETI3VOaXlGWF4B6jOXjX6ABoXZbyfasgrViijVEcueMADmM89fdXvA/J8FDpyk1N1WWyaP4G4fAbi12jrfgZJF8ZaOHDkNDl91J4QUeQUB4sk7Zd67RWNCpbD4YRD0ELw0y7x0sbLoUkV3PDEO0UMxkMwrEU9P7cdRV+iLMwcD15vPwvOj3uzTGfS8bCQUunHNkQyttzzpFgHoqm/N02fA==
      initdatasource:
        username: AgAq0098dC7OaONTAsb/sYr+ooOquLAK4/U+nhc9Ur97NLYXb08jttu2kxna8rrzgyomSAZxhlzRhd7h7UjG6DrHYx3TqTrE/Tajrl74RBxuM0hIirrfMhHzURBh4tQ6QnXGCK1ss/jOP3YS/lHjHBjxvC/+wSLEDFQNIfJ1V9kUIQGdYAq9zF8ulvMm6MWkOgR4rBE0Qv3WGF6a9X88iSGdi1GQbX3H3jpTKTgzUv+z79ARnz3J29f8lA/VKU78nXlKuG+/sGVWtf1tkJvWMGAar7mukFHoSSmbi9GB2YnphTEUwhH/N+IALukz36xQ0P/uHHgAEe4HzRDGpZh5MJH8HByrFOpG4wjcJftsd4jwydYwLIY3EFKTc/yzhvzb0Y97x/69EmFVMN/F7zXRudXDGWHYq3V80iRjKQD99UGEHrLLiZukCIt5iS6zDhCF2CPiql2tqXx2OBjuzbsIUFxRAe/zSh81DMsbRRrDI0seT5QLrPgzrjsDsQbj6EtchrFiSYQaUEYuRWRM5AnuMElO8GNyWojCKY9MCkfyueo1nUKPCzBwPytrLgFPpOQovAkCwXTctzQfplN6RY1sOmhaOYP9I63GsEitf4lEuSr4E8OGndAV1Sm6F7ZlS7oXQ68inRm7oPX1brQjYPurHYVmGzKZWGyFjzsaFF2MWt+Hhmvn2s30j6PLUu3kRYrsbf6fow==
        password: AgCOSI+UPJq0APmiRiUdSgNHAGT9vHmemJNbh6aAff6M+B0tj2oMxj+2n9dWTM89zFkb1gSafKPvIqnxW63WqJfR06XQuk6oAO++9tD1UdSBJrGfc5uD7ePqyyoEipSjcfuTGvtHCOEb5IxVRt81FvW3jbFiLdyVoNk/CmLlZ6SA3/jm6AHkgb1QQF6mAHc+puS+G1JsWflT4zMuK8jLQNbAnNfKg/xve0mHsfK2wAMwS6oSJ+5p6MJuaWDF3PcA5PNIFKxrgEglckFnwgra7NqXseV4Hox2cLM7HV70LhQ06Bo3plQPLMVRD3pi0RirH5RZHhfGuWIxczUapWxS/KFkji0igL9d9r9XU1WUQ6a02oIoW9tK+162M13O/87VV1eJumbYmvdWtVC0HLhvZqJof+Dc0bx4ls6Wsh3kZlcIhuvhMhdCISsi37/9SvhUkIFobJCqNZtZpmc1GmkzllZP1w8NjyvHtXvs4zxt/bKwERf4pz07XQaS/2H/Uskth6MHNdeMc6828SV+HkDleJng8l2cOxUEB1ETPFqC/CxqA6A9nFp0rWCNpvw1yqU6Fr8OTypVm5Yz2mxBRDn42fdoSnKQPlKo7AVMjMX2Tq/r7TDmQMgEvtymknS0Rei/llr37xSpvgZ0AEQQ9I2OQcuv/ASppzPUiFMUa7irqp+ChXsWiBV+NlShA+mD/oDsxHWkcZvBQ4Bgcw==
      diccodatasource:
        username: AgBR2NYLvhBKL6om2Rfs9coEYBoeyPXuLAsd7DDS+kCH2jaH1GoXeYWKKtrVtcRFg5Fe+4HyzMxm3MUMhxBgPgkJx3GcreVPLc576eR5moLzJr1289oHa0ip2SCbcMxMlP9fjjNl60KMzcc2wvR3cMH3IJCWgzU0umuiOu6bsqSObH3zwXgvfP6CrYhI2SYGSyCaMW65YDRdHqspm+EMRYK/i0l5e0k2VjU+YFSc3z5QWTZwBPKPgLUN0xA3XVY0hLVE/2UM+G/a72UB2tAyrXrw1i/suefYkfDnAyzwjObMPbHy6Yq6CBg8mhLxtvYFqkx0QmuRk1w2QB1JLXfJ7F0hpUvFX1NEhfbx5WH0ne290TNFIeZ7g72jRrh3HQw7rWmmtk2F4FHVB5DxAMpY8Bd8aahfhK6Q1CQOlbd5mPvalDpbgkCPAGvjnAJEH7ywWIqhb7/nVEN96Ft+2x/fuQTWTxELf2gen2DmxHB4NwMjorG2VRx+zCZ9GVGEATaCMTSlp5CGsq1yzQvwGyjguwSAx1OALHWBIVUFy5shJE04biErecYlLJB1LbS44yANi/ic/qYsqQ1VodII6el1lUsbH8Y15CbgL37Mhhdb24K6FAqXUdL/QBlAnYgwtL9Qi45X8mclsnduGs0iXa1Gg/qDpNK5Zch748QfOEBgaVFLlzaBUCvKR6oyLTEo1Y4Nw3HkyY2zihiiOgfKVpfnmEgbOE5OUyAR
        password: AgBHwhIOzsNJtDY3kDH10HUK6iBR8oGGmGPTfX5BVgDkumBOdNqVAC57w5gwqQhoEqumQPqvddwNNckJFLUJn+Of0QN5Fapjxf/ae2HIv5uIxX/y2bWkX5V27p6PFVOXlfQb03D2T5gpJHhTH7/G/+pBgm/ymnqM0RrcxzuNOmnUzLbVfqcJPI5Gsaya2IRWVkgn9ZKLmrupFkavnBmTCLoLtG0cMu9TqkHf0npN6SgVY2V0w3bKXxKnBEF0uqIQLtsze2CTdGF8iBjTZF7gKRkksZYe6kehg9lmKQqizetwYPm7Rvj4aVTi4iPd3hFuH9Qtngeltoo5Q9X6iP7WLdVlz0Bal+LVHnjA18ExgQ/EE0Tz0XjaZVuQungtalV47WOCRo33qnci6KZSR2cPyv7i6NrefZfrCscr5gAubsk2ItwYvc+N9pHVTbxtzDCEMI36byONM/WH/UagDQleYQ2Fc9s8ddMFDhVFH8Uq89k16MIQ/0Q1glp2KXiWLw95NmPREntck2Zmt09vG6WUU0lsNoAtK5/PQ6cvs1i/7t4fRpi5Nn9xEEVxHR62vW9y5kYrAJb+uZ6NdW4Ia32gRhh/gU830So3Qdm0ZqQBO4uyObsAq1HLxJcK0rb+XxfeQRI25Jl9g4sLzK3qIMK6OMTlcrEn/mPJnRcffCkoPu0DDD4EwRZHr86EZwPXdlx2cwlI1MlUIQlDCkrdd5Pq13CgELoo

pulsar-init-job:
  enabled: true
  initContainers:
    waitForUrl:
      enabled: true
      endpoint: pulsar-standalone:8080/admin/v2/brokers/health;pulsar-client:8080/actuator/health
  script: |
    echo "Create Tenant [connect-evolution]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [connect-evolution/calendar-acl-sync]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/connect-evolution/namespaces/calendar-acl-sync' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [everesst]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [everesst/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/everesst/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"
    echo "Create Tenant [acerta]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Tenant Created"
    echo "Create Namespace [acerta/payroll]"
    curl -X 'POST' \
      'http://pulsar-client:8080/api/v1/tenants/acerta/namespaces/payroll' \
      -H 'accept: */*' \
      -d ''
    echo ""
    echo "Namespace Created"

frontend-services-gateway:
  enabled: true
  application_yml: |
    spring:
      spring:
        # profile 'always-active' should always be active :) as the corresponding application-always-active.yml (in gateway jar)
        # contains some config that is always needed under normal circumstances. We pushed that config to the application-always-active.yml
        # to remove unnecessary clutter from the application.yml file.
        profiles:
          active: always-active #, nosecurity
        redis:
          host: redis-master
          port: 6379
          password: Admin123
        security:
          oauth2:
            client:
              provider:
                keycloak:
                  issuer-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns/auth/realms/acerta
                  token-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns/auth/realms/acerta/protocol/openid-connect/token
                  authorization-uri: https://keycloak-boot-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns/auth/realms/acerta/protocol/openid-connect/auth
              registration:
                ce-gateway:
                  provider: keycloak
                  client-id: ce-gateway
                  client-secret: Bl5oJEkQgYadCXlNRny1YNCzZOfz7qC0
                  redirect-uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns/login/oauth2/code/ce-gateway
                  scope:
                    - openid
                    - email
                    - profile
                    - roles

        cloud:
          gateway:
            default-filters:
              - TokenRelay
              - RemoveRequestHeader=Cookie
            routes:
              - id: heartbeat
                uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns
                order: 1000
                predicates:
                  - Path=/heartbeat
                filters:
                  - RewritePath=/heartbeat, /session-refresh
              - id: gateway-amf
                uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns
                order: 1000
                predicates:
                  - Path=/AMF/**
                filters:
                  - RewritePath=/AMF/(?<segment>.*), /$\{segment}
              - id: calendar-timespend-frontend-rsocket
                uri: ws://ce-calendar-timespend-frontend:7000
                order: 1000
                predicates:
                  - Path=/calendar-timespend/socket
                filters:
                  - RewritePath=/calendar-timespend/socket, /socket
              - id: calendar-timespend-frontend-everything-else
                uri: http://ce-calendar-timespend-frontend:8080
                order: 2000
                predicates:
                  - Path=/calendar-timespend/**
                filters:
                  - RewritePath=/calendar-timespend/(?<segment>.*), /$\{segment}
              - id: ff4j
                uri: http://ce-ff4j-server:8080
                order: 10
                predicates:
                  - Path=/ff4j/**
                filters:
                  - RewritePath=/ff4j/(?<segment>.*), /$\{segment}
      ---
      acerta:
        keycloak:
          registration-service-name: ce-gateway
        gateway:
          keep-alive-path: /keep-alive/index.html
          logout-uri: https://frontend-services-gateway-${OKTETO_NAMESPACE}.tst.connectevolution.global.dns/authenticate
          session-timeout: 90

keycloak-boot:
  enabled: true
  ingress:
    enabled: true
    className: ""
    annotations:
      dev.okteto.com/generate-host: "true"
  extraEnv:
    REALM_IMPORT_FILE: "file:///config/acerta-realm.json"
    GATEWAY_SUBDOMAIN_SUFFIX: "-${OKTETO_NAMESPACE}"
    GATEWAY_DOMAIN: ".tst.connectevolution.global.dns"
    TZ: "Europe/Brussels"
  acerta_realm_json: |-
    {
      "id": "acerta",
      "realm": "acerta",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 60,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "2f721e46-398b-43ff-845f-3c747f1f69f5",
            "name": "standard",
            "description": "Standard customer",
            "composite": false,
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          },
          {
            "id": "b8b1cb49-c953-4cb0-acea-62b24c4b6d30",
            "name": "silver",
            "description": "Silver customer",
            "composite": false,
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          },
          {
            "id": "18671d77-31e2-43f2-bcb7-3873ad07cb33",
            "name": "default-roles-acerta",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "manage-account",
                  "view-profile"
                ]
              }
            },
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          },
          {
            "id": "f44f5ba9-2393-4d2a-b581-81cf8dd7f245",
            "name": "gold",
            "description": "Gold customers",
            "composite": false,
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          },
          {
            "id": "3b6109f5-6e5a-4578-83c3-791ec3e2bf9e",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          },
          {
            "id": "0dd6a8c7-d669-4941-9ea1-521980e9c53f",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          },
          {
            "id": "ca962095-7f9b-49e2-a190-e391a0d4b704",
            "name": "user",
            "composite": false,
            "clientRole": false,
            "containerId": "acerta",
            "attributes": {}
          }
        ],
        "client": {
          "newClient": [],
          "realm-management": [
            {
              "id": "5d00243f-ceec-4b0c-995e-d86d5b8a0ae6",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "941612de-bd85-47a5-8dfa-37c270dde28c",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "5ea9810d-63cc-4277-9b32-ba8a3d3c6091",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "8b7b0dd8-350b-473e-b8cd-8acad34f1358",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "0f8e5ee8-b014-4b7c-9b69-50f46abcba5f",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "911b1489-9383-4734-b134-bf49bf992ce9",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "5d48274c-bd6b-4c26-ad54-f1a2254beac0",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "3ea43b64-316f-4693-8346-9ee78b24adaf",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "49735614-96ec-49b2-98fe-3af9bcd1a33a",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "e8f8c3cc-0ff1-4f72-a271-db6821a3cdb6",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "387418b1-4f80-4b00-b9dd-805ca041f805",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "427c27d4-521a-464b-a0df-16d7f537e8d5",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "view-clients",
                    "view-authorization",
                    "query-groups",
                    "manage-realm",
                    "query-clients",
                    "manage-clients",
                    "view-realm",
                    "manage-identity-providers",
                    "create-client",
                    "manage-users",
                    "view-identity-providers",
                    "query-users",
                    "query-realms",
                    "view-users",
                    "impersonation",
                    "manage-authorization",
                    "manage-events",
                    "view-events"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "a574cf01-03e4-4573-ab9e-276d13a1ce8d",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "c3a253a8-a1b6-4d38-9677-f728f32482ad",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "f3cb93da-273e-419a-b2f4-93f09896abcf",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-users",
                    "query-groups"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "0332e99b-3dfc-4193-9e13-5728f8f3e6d6",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "6eedf2b7-50ef-4495-a89b-54aef751b7fa",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "aac3def5-f193-4a6c-9065-1667a0746a8a",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            },
            {
              "id": "b690cb9c-0f4a-4be5-ade0-b40443d8149d",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "6a4bfbd0-576d-4778-af56-56f876647355",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "ce-gateway-service": [],
          "account-console": [],
          "broker": [
            {
              "id": "397b5703-4c81-48fd-a24c-a7e8177ef657",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "4b9609f0-48d1-4e71-9381-2ecec08616f9",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "8daa8096-d14e-4d1c-ad1f-83f822016aa1",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            },
            {
              "id": "15f0d8be-932b-4565-8ad0-e8aa170093dd",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            },
            {
              "id": "c5aa697c-bf87-47c6-bd94-9121b72420b9",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            },
            {
              "id": "9f630a02-1aee-4bcd-b73f-64e93656c4d7",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            },
            {
              "id": "f0b3bbe4-aec1-4227-b9d3-2c314d612a04",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            },
            {
              "id": "948269c7-a69c-4c82-a7f3-88868713dfd9",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            },
            {
              "id": "aed18201-2433-4998-8fa3-0979b0b31c10",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [
        {
          "id": "635c3314-f15f-4c02-bcb7-8739fd4c21b7",
          "name": "golden_customers",
          "path": "/golden_customers",
          "attributes": {},
          "realmRoles": [
            "gold"
          ],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "279c5ec4-0588-4884-91c1-2697ed5c9826",
          "name": "silver_customers",
          "path": "/silver_customers",
          "attributes": {},
          "realmRoles": [
            "silver"
          ],
          "clientRoles": {},
          "subGroups": []
        }
      ],
      "defaultRole": {
        "id": "18671d77-31e2-43f2-bcb7-3873ad07cb33",
        "name": "default-roles-acerta",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "acerta"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "12eebf0b-a3eb-49f8-9ecf-173cf8a00145",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/acerta/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/realms/acerta/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "8209784b-8540-43c2-aece-241acf12ea5a",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/acerta/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/realms/acerta/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "58395b96-1718-4787-8f92-74577e2bfc30",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "13d76feb-d762-4409-bb84-7a75bc395a61",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "4b9609f0-48d1-4e71-9381-2ecec08616f9",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "b88ce206-63d6-43b6-87c9-ea09d8c02f32",
          "clientId": "newClient",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "http://localhost:8089/",
            "http://localhost:8089/auth/redirect/"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "profile"
          ],
          "optionalClientScopes": [
            "web-origins",
            "address",
            "read",
            "phone",
            "roles",
            "offline_access",
            "microprofile-jwt",
            "write",
            "email"
          ]
        },
        {
          "id": "6a4bfbd0-576d-4778-af56-56f876647355",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "8e358d2f-b085-4243-8e6e-c175431e5eeb",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/acerta/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/admin/acerta/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "9cfca9ee-493d-4b5e-8170-2d364149de59",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "5898f71f-b91e-4c3f-9c86-48de0e8665c4",
          "clientId": "ce-gateway-service",
          "name": "CE Gateway Service",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "0e082231-a70d-48e8-b8a5-fbfb743041b6",
          "redirectUris": [
            "https://frontend-services-gateway${GATEWAY_SUBDOMAIN_SUFFIX}${GATEWAY_DOMAIN}/*",
            "http://localhost:4200/*",
            "http://localhost:8087/*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.multivalued.roles": "false",
            "saml.force.post.binding": "false",
            "frontchannel.logout.session.required": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "use.refresh.tokens": "true",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "false",
            "client_credentials.use_refresh_token": "false",
            "saml.client.signature": "false",
            "require.pushed.authorization.requests": "false",
            "pkce.code.challenge.method": "S256",
            "saml.allow.ecp.flow": "false",
            "saml.assertion.signature": "false",
            "id.token.as.detached.signature": "false",
            "client.secret.creation.time": "1669818520",
            "saml.encrypt": "false",
            "saml.server.signature": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml.artifact.binding": "false",
            "saml_force_name_id_format": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "acr.loa.map": "{}",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "008d32b5-ea7b-4739-89af-e90fe137bda9",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "18e141bf-dabe-4858-879c-dbc439cdead4",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "10cbe37f-0198-4d65-bc8a-bfe5ad8145d1",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "111ed87a-5fd3-4cee-96df-8dbfb88cfdc0",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "24924d8d-6071-4a93-b40f-326176cb335e",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "2f6a9bdf-3758-484c-996d-e4f93555559f",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "804d4798-d9a3-4fd3-8b28-d12142e8cb3d",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "c658ae14-e96a-4745-b21b-2ed5c4c63f5f",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "959521bc-5ffd-465b-95f2-5b0c20d1909c",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "07b8550c-b298-4cce-9ffb-900182575b76",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "a3e7b19d-df6c-437e-9eea-06fec1becb2f",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "72a070f7-4363-4c88-8153-6fd2d12b9b04",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "24b42c6d-a93c-4aa1-9a03-2a2b55954c13",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "19131296-6140-4e3e-b79c-08ba665aa935",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "99323ead-dc91-4d1c-af0b-abac06cc3186",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "569b3d44-4ecd-4768-a58c-70ff38f4b4fe",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "ba8c9950-fd0b-4434-8be6-b58456d7b6d4",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "0a9ddd71-309c-40f0-8ea6-a0791070c6ed",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "fbf53bbd-1ad0-4bf8-8030-50f81696d8ee",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "423be2cd-42c0-462e-9030-18f9b28ff2d3",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "53eb9006-4b81-474a-8b60-80f775d54b63",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4d8bc82a-eaeb-499e-8eb2-0f1dcbe91699",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d3b25485-4042-419d-afff-cfd63a76e229",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "422cfa5a-f2f4-4f36-82df-91b47ae1ea50",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3f2863c1-d98d-45b5-b08f-af9c4d9c10f8",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c98c063d-eee4-41a0-9130-595afd709d1f",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "8dbed80a-d672-4185-8dda-4bba2a56ec83",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5e5c690c-93cf-489d-a054-b109eab8911b",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3b985202-af8a-42f1-ac5f-0966a404f5d7",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "6eafd1b3-7121-4919-ad1e-039fa58acc32",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "73cba925-8c31-443f-9601-b1514e6396c1",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "77c7e29d-1a22-4419-bbfb-4a62bb033449",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "94e1879d-b49e-4178-96e0-bf8d7f32c160",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "b3526ac1-10e2-4344-8621-9c5a0853e97a",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "d30270dc-baa6-455a-8ff6-ddccf8a78d86",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "f5b1684d-e479-4134-8578-457fa64717da",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "c1a2eb23-25c6-4be7-a791-bbdca99c83f7",
          "name": "read",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "51d49314-b511-43e0-9258-bfb873758a78",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "2b384cd0-9e85-4a87-8eeb-2b480b0587b7",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "c3e253fb-7361-47cf-9d4a-86245686fdf1",
          "name": "write",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          }
        }
      ],
      "defaultDefaultClientScopes": [
        "roles",
        "role_list",
        "web-origins",
        "email",
        "profile",
        "acr"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "84305f42-4b6d-4b0a-ac7c-53e406e3ac63",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "c7c38a95-744f-4558-a403-9cf692fe1944",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "365b2899-befe-4417-b89b-562650ec4446",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "81c32244-7921-43e9-9356-a3469259b78c",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "d09b2147-afea-4f7f-a49c-0aec7eee10de",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "41ffde1b-72a2-416f-87a7-94989e940dc0",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-role-list-mapper",
                "saml-user-attribute-mapper",
                "saml-user-property-mapper",
                "oidc-address-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-usermodel-property-mapper"
              ]
            }
          },
          {
            "id": "76075388-2782-4656-a986-313493239a9f",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "3caaf57a-9cd7-48c1-b709-b40b887414f7",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-attribute-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-address-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-full-name-mapper",
                "saml-role-list-mapper"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "d67a940a-52e4-44a5-9f69-6ffdd67a188f",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "48d40de3-6234-42e8-9449-f68f56abb54b",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "52ea1c5d-2a30-459f-b66a-249f298b32f8",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "06056d9a-946d-4f97-b1cb-1cc019d482f5",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account - Alternatives - 0",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "7db52abe-b5b8-4f53-b94e-78dcab9fbb23",
          "alias": "Handle Existing Account - Alternatives - 0",
          "description": "Subflow of Handle Existing Account with alternative executions",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f32870ab-7751-48a7-844c-20b51139666d",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ee978e47-e1e7-46f0-a3c8-cfdbed1c1c0a",
          "alias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
          "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ac384e82-90d9-4b46-bd12-0aaae8f41792",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c898f549-21d4-46a3-8478-09e863a8446a",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "4ff5bce8-8e6c-4117-9954-9440010025c4",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "direct grant - direct-grant-validate-otp - Conditional",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c939c6e4-4f9b-407c-a89e-dd01e3621a95",
          "alias": "direct grant - direct-grant-validate-otp - Conditional",
          "description": "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "dc2f8fd2-6c92-4747-8d91-c6e63af61843",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "70c1ab81-095f-43ba-b707-d7054bbf5bd0",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "first broker login - Alternatives - 0",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "5a21a4d7-613a-486f-aa40-6960cccf3e33",
          "alias": "first broker login - Alternatives - 0",
          "description": "Subflow of first broker login with alternative executions",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f1d3cb2a-a49e-4abe-8368-6b895392850b",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "forms - auth-otp-form - Conditional",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "a486c482-d48e-431d-869a-161e70c558d5",
          "alias": "forms - auth-otp-form - Conditional",
          "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "9b876088-c80c-42f9-a605-e7e672218009",
          "alias": "http challenge",
          "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "no-cookie-redirect",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "basic-auth",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "basic-auth-otp",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1b68456a-27c9-4390-9b73-fbebd7a1666f",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8522f72c-f2f0-421f-9d9e-c82d8378c37c",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-profile-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d722947e-a442-4858-b0b4-741c7a81a6be",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "reset credentials - reset-otp - Conditional",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b72625c9-ed27-431a-8753-e48f1d12e24e",
          "alias": "reset credentials - reset-otp - Conditional",
          "description": "Flow to determine if the reset-otp authenticator should be used or not.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "2414e1ee-140e-4723-8825-cf6e62d36a43",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "7ed8819f-c829-4ad0-a17e-12e2c7dce925",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "bcb24237-6acd-46b4-95ad-5a9f8b9fd0f5",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "terms_and_conditions",
          "name": "Terms and Conditions",
          "providerId": "terms_and_conditions",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5"
      },
      "keycloakVersion": "18.0.0",
      "userManagedAccessAllowed": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
