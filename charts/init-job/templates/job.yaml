{{- $fullName := include "mychart.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "job.fullname" . }}
spec:
  template:
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
    {{- if .Values.securityContext.runAsUser }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- if .Values.securityContext.runAsGroup }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        {{- end }}
        {{- if .Values.securityContext.fsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
        {{- end }}
    {{- end }}
      {{- if .Values.initContainers.waitForUrl.enabled }}
      initContainers:
        - name: wait-for-pulsar
          image: "{{ .Values.initContainers.waitForUrl.image.repository }}:{{ .Values.initContainers.waitForUrl.image.tag }}"
          imagePullPolicy: {{ .Values.initContainers.waitForUrl.image.imagePullPolicy }}
          args: [ '{{ .Values.initContainers.waitForUrl.endpoint }}' ]
          env:
          {{- if .Values.extraEnvs }}
            {{- toYaml .Values.extraEnvs | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- if .Values.initContainers.waitForMssql.enabled }}
      initContainers:
        - name: wait-for-mssql
          image: "{{ .Values.initContainers.waitForMssql.image.repository }}:{{ .Values.initContainers.waitForMssql.image.tag }}"
          imagePullPolicy: {{ .Values.initContainers.waitForMssql.image.imagePullPolicy }}
          args: [ '{{ .Values.initContainers.waitForMssql.server.host }}', '{{ .Values.initContainers.waitForMssql.server.user }}', '{{ .Values.initContainers.waitForMssql.server.password }}' ]
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-datasource-cred
                  key: username
            - name: PWD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-datasource-cred
                  key: password
            {{- if .Values.extraEnvs }}
              {{- toYaml .Values.extraEnvs | nindent 10 }}
            {{- end }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        name: {{ template "job.fullname" . }}
        command:
          - "sh"
          - "-c"
          - {{- toYaml .Values.script | nindent 12 }}
        env:
          - name: USER
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}-datasource-cred
                key: username
          - name: PWD
            valueFrom:
              secretKeyRef:
                name: {{ $fullName }}-datasource-cred
                key: password
        {{- range concat (.Values.global.environment) (.Values.environment | default list)}}
          - name: {{ .name | quote}}
            value: {{ .value | quote }}
        {{- end }}
        {{- if .Values.extraEnvs }}
          {{- toYaml .Values.extraEnvs | nindent 10 }}
        {{- end }}
        {{- with .Values.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{- with .Values.volumeMounts }}
        volumeMounts:
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}
  backoffLimit: {{ .Values.backoffLimit }}